(ns app-creator.client.ui.info)

(defn help-label [id info text]
  [:div
   {:class "col-12 pt-5 header-with-help"}
   [:label {:class "plus-label mt-20 help-label"
            :style {:visibility "hidden"}} "?"]
   [:p {:class "mb-4 pb-2"} text]
   [:div
    {:style {:position "relative"}}
    [:label {:class "shadow-label mt-20 help-label" :for id} "?"]
    [:button {:class "help-button" :id id :style {:display "none"}}]
    [:div {:class "help-div box"}
     info]]])

(def postgres-props-info
  [:p
   [:b "DB name:"] " valid SQL-identifier of your future database." [:br]
   [:b "Host:"] " valid host of your PostgreSQL server." [:br]
   [:b "Username:"] " your PostgreSQL username." [:br]
   [:b "Password:"] " password for your PostgreSQL user." [:br]
   "Input your values without quotes."])

(def postgres-tables-info
  [:p
   [:b "Table name:"] " valid SQL-identifier of your future table name." [:br]
   [:b "Column:"] " valid SQL-identifier of your future column" [:br]
   [:b "Type:"] " column data type. Valid types: " [:br]
   [:i "bool"] " - matches BOOLEAN" [:br]
   [:i "number"] " - matches INTEGER" [:br]
   [:i "string"] " - matches VARCHAR(255)" [:br]
   [:i "date"] " - matches DATE" [:br]
   [:i "id"] " - matches INT GENERATED BY DEFAULT AS IDENTITY" [:br]])

(def server-opts-info
  [:p "Different project options of your future application." [:br]
   [:b "Build tool:"] " tool for your project build automation." [:br]
   [:b "Language:"] " programming language of your project." [:br]
   [:b "Packaging:"] " your project packaging format." [:br]
   [:b "Boot version:"] " used Spring Boot version." [:br]
   [:b "Java version:"] " language level of your project." [:br]
   [:b "Group:"] " project coordinates, e.g. " [:i "com.example"] [:br]
   [:b "Artifact:"] " archive name, e.g. " [:i "demo"] [:br]
   [:b "Project name:"] " your application name, e.g. " [:i "demo"] [:br]
   [:b "Description:"] " project description." [:br]])

(def server-props-info
  [:p "Properties of your future application." [:br]
   [:b "Type:"] " DBMS of the database to connect with your server (currently only \"postgresql\" is accepted)." [:br]
   [:b "Host:"] " host of the database to connect." [:br]
   [:b "Port:"] " port of the database to connect." [:br]
   [:b "DB name:"] " name of the database to connect." [:br]
   [:b "Username:"] " username for the database to connect." [:br]
   [:b "Password:"] " password for the database to connect." [:br]])

(def server-controllers-info
  [:p "Rest Controllers to add to your new project.
  Service ans Repository layers and corresponding Entities will be also added." [:br]
   [:b "Controller name:"] " valid Java-class name of your controller ending with \"Controller\"." [:br]
   [:b "Method name:"] " valid Java-method name of your request method." [:br]
   [:b "Request URL:"] " route of the request. Must be a valid URL starting with \"/\".
   Accepts path variables in curly brackets." [:br]
   [:b "Request type:"] " type of HTTP call of the request. Valid types: "
   [:i "GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS"] " (valid in any case)." [:br]])

(def client-opts-info
  [:p
   [:b "Language:"] " programming language of your project." [:br]
   [:b "Test framework:"] " the test framework to be used." [:br]
   [:b "Project name:"] "your application name, e.g. " [:i "demo"] [:br]
   [:b "Package name:"] " the package for source files.
   Must consist of at least two parts, e.g. " [:i "com.example.demo"] [:br]
   [:b "Server host"] " host of the server of your application." [:br]
   [:b "Server port"] " port of the server of your application." [:br]])

(def client-endpoints-info
  [:p "Description of endpoints of your client project." [:br]
   [:b "URL:"] " route of the endpoint. Must be a valid URL starting with \"/\".
   Accepts path variables in curly brackets." [:br]
   [:b "Method name:"] " valid Java-method name of your request method." [:br]
   [:b "Request type:"] " type of HTTP call of the request. Valid types: "
   [:i "GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS"] " (valid in any case)." [:br]
   [:b "Body type:"] " valid Java-class name or Java-collection of Java-class type, e.g. "
   [:i "List<User>"] [:br]])

(def deploy-network-info
  [:p "Valid name of the Docker network to run your containers in, up to 15 characters long."])

(def cont-jar-info
  [:p "Description of Docker containers with server JAR applications." [:br]
   [:b "Container name:"] " valid name of your future container." [:br]
   [:b "Image name:"] " name of the image to build (without tag), up to 128 characters long." [:br]
   [:b "Build directory name:"] [:i " " [:u "name"]] " of the directory to build your image in." [:br]
   [:b "Path to jar:"] " valid absolute path to the existing .jar file
   with server application (use only forward slashes)." [:br]])

(def cont-nginx-info
  [:p "Description of Docker containers with NGINX proxy web servers." [:br]
   [:b "Container name:"] " valid name of your future container." [:br]
   [:b "Image name:"] " valid name of the image to build (without tag), up to 128 characters long." [:br]
   [:b "Build directory name:"] [:i " " [:u "name"]] " of the directory to build your image in." [:br]
   [:b "Backend container:"] " valid name of the container with server application." [:br]])

(def cont-pg-info
  [:p "Description of Docker containers with PostgreSQL databases." [:br]
   [:b "Container name:"] " valid SQL-identifier for your future table" [:br]
   [:b "DB port:"] " port of the database in your container." [:br]
   [:b "DB password:"] " password for the user of the database in your container." [:br]])

(def out-path-info
  [:p "Valid absolute path to the existing directory to put all generated files in (use only forward slashes)."])
