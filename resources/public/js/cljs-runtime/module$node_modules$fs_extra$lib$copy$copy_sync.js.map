{
"version":3,
"file":"module$node_modules$fs_extra$lib$copy$copy_sync.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/fs-extra/lib/copy/copy-sync.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fs_extra$lib$copy$copy_sync\"] = function(global,require,module,exports) {\nvar process = require('process');\n'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirsSync = require('../mkdirs').mkdirsSync\nconst utimesMillisSync = require('../util/utimes').utimesMillisSync\nconst stat = require('../util/stat')\n\nfunction copySync (src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  opts = opts || {}\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    process.emitWarning(\n      'Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n' +\n      '\\tsee https://github.com/jprichardson/node-fs-extra/issues/269',\n      'Warning', 'fs-extra-WARN0002'\n    )\n  }\n\n  const { srcStat, destStat } = stat.checkPathsSync(src, dest, 'copy', opts)\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy')\n  if (opts.filter && !opts.filter(src, dest)) return\n  const destParent = path.dirname(dest)\n  if (!fs.existsSync(destParent)) mkdirsSync(destParent)\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction getStats (destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync\n  const srcStat = statSync(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isFile() ||\n           srcStat.isCharacterDevice() ||\n           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n  else if (srcStat.isSocket()) throw new Error(`Cannot copy a socket file: ${src}`)\n  else if (srcStat.isFIFO()) throw new Error(`Cannot copy a FIFO pipe: ${src}`)\n  throw new Error(`Unknown file: ${src}`)\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts)\n  return mayCopyFile(srcStat, src, dest, opts)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest)\n    return copyFile(srcStat, src, dest, opts)\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nfunction copyFile (srcStat, src, dest, opts) {\n  fs.copyFileSync(src, dest)\n  if (opts.preserveTimestamps) handleTimestamps(srcStat.mode, src, dest)\n  return setDestMode(dest, srcStat.mode)\n}\n\nfunction handleTimestamps (srcMode, src, dest) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) makeFileWritable(dest, srcMode)\n  return setDestTimestamps(src, dest)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode) {\n  return setDestMode(dest, srcMode | 0o200)\n}\n\nfunction setDestMode (dest, srcMode) {\n  return fs.chmodSync(dest, srcMode)\n}\n\nfunction setDestTimestamps (src, dest) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  const updatedSrcStat = fs.statSync(src)\n  return utimesMillisSync(dest, updatedSrcStat.atime, updatedSrcStat.mtime)\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts)\n  return copyDir(src, dest, opts)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts) {\n  fs.mkdirSync(dest)\n  copyDir(src, dest, opts)\n  return setDestMode(dest, srcMode)\n}\n\nfunction copyDir (src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))\n}\n\nfunction copyDirItem (item, src, dest, opts) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  if (opts.filter && !opts.filter(srcItem, destItem)) return\n  const { destStat } = stat.checkPathsSync(srcItem, destItem, 'copy', opts)\n  return getStats(destStat, srcItem, destItem, opts)\n}\n\nfunction onLink (destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src)\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest)\n  } else {\n    let resolvedDest\n    try {\n      resolvedDest = fs.readlinkSync(dest)\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)\n      throw err\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest)\n    }\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n    }\n    return copyLink(resolvedSrc, dest)\n  }\n}\n\nfunction copyLink (resolvedSrc, dest) {\n  fs.unlinkSync(dest)\n  return fs.symlinkSync(resolvedSrc, dest)\n}\n\nmodule.exports = copySync\n\n};"],
"names":["shadow$provide","global","require","module","exports","getStats","destStat","src","dest","opts","srcStat","dereference","statSync","fs","lstatSync","isDirectory","mkdirSync","copyDir","chmodSync","srcMode","isFile","isCharacterDevice","isBlockDevice","overwrite","unlinkSync","copyFile","errorOnExist","Error","isSymbolicLink","resolvedSrc","readlinkSync","path","resolve","process","cwd","resolvedDest","err","code","symlinkSync","stat","isSrcSubdir","isSocket","isFIFO","copyFileSync","preserveTimestamps","mode","updatedSrcStat","utimesMillisSync","atime","mtime","readdirSync","forEach","item","srcItem","join","destItem","filter","checkPathsSync","mkdirsSync","copySync","clobber","arch","emitWarning","checkParentPathsSync","destParent","dirname","existsSync"]
}
