{
"version":3,
"file":"module$node_modules$fs_extra$lib$move$move_sync.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG5G,MAAMC,GAAKH,OAAA,CAAQ,6CAAR,CAAX,CACMI,KAAOJ,OAAA,CAAQ,2CAAR,CADb,CAEMK,SAAWL,OAAA,CAAQ,6CAAR,CAAmBK,CAAAA,QAFpC,CAGMC,WAAaN,OAAA,CAAQ,+CAAR,CAAqBM,CAAAA,UAHxC,CAIMC,WAAaP,OAAA,CAAQ,+CAAR,CAAqBO,CAAAA,UAJxC,CAKMC,KAAOR,OAAA,CAAQ,4CAAR,CA+CbC;MAAOC,CAAAA,OAAP,CA7CAO,QAAkB,CAACC,GAAD,CAAMC,IAAN,CAAYC,IAAZ,CAAkB,CAClCA,IAAA,CAAOA,IAAP,EAAe,EACf,OAAMC,UAAYD,IAAKC,CAAAA,SAAjBA,EAA8BD,IAAKE,CAAAA,OAAnCD,EAA8C,CAAA,CAApD,CAEM,CAAEE,OAAF,CAAWC,cAAA,CAAiB,CAAA,CAA5B,CAAA,CAAsCR,IAAKS,CAAAA,cAAL,CAAoBP,GAApB,CAAyBC,IAAzB,CAA+B,MAA/B,CAAuCC,IAAvC,CAC5CJ,KAAKU,CAAAA,oBAAL,CAA0BR,GAA1B,CAA+BK,OAA/B,CAAwCJ,IAAxC,CAA8C,MAA9C,CAMMQ,KAAAA,CAASf,IAAKgB,CAAAA,OAAL,CALGT,IAKH,CACIP,KAAKiB,CAAAA,KAALC,CAAWH,IAAXG,CACDC,CAAAA,IAPlB,GAO2BJ,IAP3B,EAAyBZ,UAAA,CAAWH,IAAKgB,CAAAA,OAAL,CAAaT,IAAb,CAAX,CAWzB,IAVsCK,CAAAA,cAUtC,CACA,GAX2BH,SAW3B,CACEP,UAAA,CAZmBK,IAYnB,CADF,KAIA,IAAIR,EAAGqB,CAAAA,UAAH,CAfiBb,IAejB,CAAJ,CAAyB,KAAUc,MAAJ,CAAU,sBAAV,CAAN,CAIY,CAAA,CAAA,CACrC,GAAI,CACFtB,EAAGuB,CAAAA,UAAH,CArBchB,GAqBd,CArBmBC,IAqBnB,CADE,CAEF,MAAOgB,GAAP,CAAY,CACZ,GAAiB,OAAjB,GAAIA,GAAIC,CAAAA,IAAR,CAA0B,KAAMD,IAAN,CAW5BtB,QAAA,CAlCgBK,GAkChB;AAlCqBC,IAkCrB,CALaC,CA7BcC,SA6BdD,CAEXiB,aAAc,CAAA,CAFHjB,CAGXkB,mBAAoB,CAAA,CAHTlB,CAKb,CAVE,IAAA,CAWKN,UAAA,CAnCSI,GAmCT,CAXL,OAAA,CAFY,CAHuB,GAAA,CAAA,IAAA,EAAA,CAnBrC,MAAO,IAP2B,CAVwE;",
"sources":["node_modules/fs-extra/lib/move/move-sync.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fs_extra$lib$move$move_sync\"] = function(global,require,module,exports) {\n'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copySync = require('../copy').copySync\nconst removeSync = require('../remove').removeSync\nconst mkdirpSync = require('../mkdirs').mkdirpSync\nconst stat = require('../util/stat')\n\nfunction moveSync (src, dest, opts) {\n  opts = opts || {}\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  const { srcStat, isChangingCase = false } = stat.checkPathsSync(src, dest, 'move', opts)\n  stat.checkParentPathsSync(src, srcStat, dest, 'move')\n  if (!isParentRoot(dest)) mkdirpSync(path.dirname(dest))\n  return doRename(src, dest, overwrite, isChangingCase)\n}\n\nfunction isParentRoot (dest) {\n  const parent = path.dirname(dest)\n  const parsedPath = path.parse(parent)\n  return parsedPath.root === parent\n}\n\nfunction doRename (src, dest, overwrite, isChangingCase) {\n  if (isChangingCase) return rename(src, dest, overwrite)\n  if (overwrite) {\n    removeSync(dest)\n    return rename(src, dest, overwrite)\n  }\n  if (fs.existsSync(dest)) throw new Error('dest already exists.')\n  return rename(src, dest, overwrite)\n}\n\nfunction rename (src, dest, overwrite) {\n  try {\n    fs.renameSync(src, dest)\n  } catch (err) {\n    if (err.code !== 'EXDEV') throw err\n    return moveAcrossDevice(src, dest, overwrite)\n  }\n}\n\nfunction moveAcrossDevice (src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true,\n    preserveTimestamps: true\n  }\n  copySync(src, dest, opts)\n  return removeSync(src)\n}\n\nmodule.exports = moveSync\n\n};"],
"names":["shadow$provide","global","require","module","exports","fs","path","copySync","removeSync","mkdirpSync","stat","moveSync","src","dest","opts","overwrite","clobber","srcStat","isChangingCase","checkPathsSync","checkParentPathsSync","parent","dirname","parse","parsedPath","root","existsSync","Error","renameSync","err","code","errorOnExist","preserveTimestamps"]
}
