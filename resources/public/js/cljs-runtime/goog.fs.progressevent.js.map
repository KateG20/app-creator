{
"version":3,
"file":"goog.fs.progressevent.js",
"lineCount":17,
"mappings":"AASAA,IAAKC,CAAAA,OAAL,CAAa,uBAAb,CAAA;AAEAD,IAAKE,CAAAA,OAAL,CAAa,mBAAb,CAAA;AAaAF,IAAKG,CAAAA,EAAGC,CAAAA,aAAR,GAAwBC,QAAQ,CAACC,KAAD,EAAQC,MAAR,CAAgB;AAE9CP,MAAKG,CAAAA,EAAGC,CAAAA,aAAcI,CAAAA,IAAtB,CAA2B,IAA3B,EAAiC,aAAjC,EAAgDF,KAAMG,CAAAA,IAAtD,EAA4DF,MAA5D,CAAA;AAOA,MAAKG,CAAAA,MAAL,GAAcJ,KAAd;AAT8C,CAAhD;AAWAN,IAAKW,CAAAA,QAAL,CAAcX,IAAKG,CAAAA,EAAGC,CAAAA,aAAtB,EAAqCJ,IAAKY,CAAAA,MAAOC,CAAAA,KAAjD,CAAA;AAOAb,IAAKG,CAAAA,EAAGC,CAAAA,aAAcU,CAAAA,SAAUC,CAAAA,kBAAhC,GAAqDC,QAAQ,EAAG;AAE9D,SAAO,IAAKN,CAAAA,MAAOO,CAAAA,gBAAnB;AAF8D,CAAhE;AASAjB,IAAKG,CAAAA,EAAGC,CAAAA,aAAcU,CAAAA,SAAUI,CAAAA,SAAhC,GAA4CC,QAAQ,EAAG;AAErD,SAAO,IAAKT,CAAAA,MAAOU,CAAAA,MAAnB;AAFqD,CAAvD;AASApB,IAAKG,CAAAA,EAAGC,CAAAA,aAAcU,CAAAA,SAAUO,CAAAA,QAAhC,GAA2CC,QAAQ,EAAG;AAEpD,SAAO,IAAKZ,CAAAA,MAAOa,CAAAA,KAAnB;AAFoD,CAAtD;;",
"sources":["goog/fs/progressevent.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A wrapper for the HTML5 File ProgressEvent objects.\n */\ngoog.provide('goog.fs.ProgressEvent');\n\ngoog.require('goog.events.Event');\n\n\n\n/**\n * A wrapper for the progress events emitted by the File APIs.\n *\n * @param {!ProgressEvent} event The underlying event object.\n * @param {!Object} target The file access object emitting the event.\n * @extends {goog.events.Event}\n * @constructor\n * @final\n */\ngoog.fs.ProgressEvent = function(event, target) {\n  'use strict';\n  goog.fs.ProgressEvent.base(this, 'constructor', event.type, target);\n\n  /**\n   * The underlying event object.\n   * @type {!ProgressEvent}\n   * @private\n   */\n  this.event_ = event;\n};\ngoog.inherits(goog.fs.ProgressEvent, goog.events.Event);\n\n\n/**\n * @return {boolean} Whether or not the total size of the of the file being\n *     saved is known.\n */\ngoog.fs.ProgressEvent.prototype.isLengthComputable = function() {\n  'use strict';\n  return this.event_.lengthComputable;\n};\n\n\n/**\n * @return {number} The number of bytes saved so far.\n */\ngoog.fs.ProgressEvent.prototype.getLoaded = function() {\n  'use strict';\n  return this.event_.loaded;\n};\n\n\n/**\n * @return {number} The total number of bytes in the file being saved.\n */\ngoog.fs.ProgressEvent.prototype.getTotal = function() {\n  'use strict';\n  return this.event_.total;\n};\n"],
"names":["goog","provide","require","fs","ProgressEvent","goog.fs.ProgressEvent","event","target","base","type","event_","inherits","events","Event","prototype","isLengthComputable","goog.fs.ProgressEvent.prototype.isLengthComputable","lengthComputable","getLoaded","goog.fs.ProgressEvent.prototype.getLoaded","loaded","getTotal","goog.fs.ProgressEvent.prototype.getTotal","total"]
}
