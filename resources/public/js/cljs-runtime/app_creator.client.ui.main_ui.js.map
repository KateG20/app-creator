{"version":3,"sources":["app_creator/client/ui/main_ui.cljs"],"mappings":";AAcA,0CAAA,1CAAMA;AAAN,AACE,IAAME,OAAK,sDAAA,mFAAA,zIAACC;AAAZ,AAAA,0FAAA,mDAAA,2CAAA,wDAAA,2BAAA,uDAAA,2CAAA,yDAAA,OAAA,gEAAA,uBAAA,mFAAA,8CAAA,2CAAA,uDAAA,2CAAA,uDAAA,0BAAA,AAAAF,gBAQKC;;AAEP,uCAAA,vCAAME;AAAN,AACE,IAAMC,iBAAS,sDAAA,mFAAA,zIAACF;AAAhB,AAAA,0FAAA,mDAAA,2CAAA,wDAAA,sBAAA,mFAAA,mDAAA,2CAAA,wDAAA,SAAA,uDAAA,2CAAA,iEAKyB,kBAAA,AAAAF,iCAAA,UAAA,3BAAKI;;AA6BhC,wCAAA,xCAAMC;AAAN,AACE,IAAMC,mBAAiB,sDAAA,mFAAA,zIAACJ;AAAxB,AACE;AAAA,AAAA,0FAAA,mDAAA,2CAAA,wDAAA,qCAAA,mFAAA,sDAAA,2CAAA,wDAAA,WAAA,qDAAA,WAAA,qDAAA,UAAA,kDAAA,0BAAA,mFAAA,uDAAA,2CAAA,wDAAA,cAAA,oDAAA,kBAAA,gBAAA,mFAAA,uDAAA,2CAAA,wDAAA,iBAAA,oDAAA,0BAAA,mFAAA,mDAAA,2CAAA,wDAAA,mCAAA,mFAAA,mDAAA,2CAAA,wDAAA,qCAAA,mFAAA,mDAAA,2CAAA,wDAAA,yBAAA,oFAAA,mDAAA,2CAAA,wDAAA,0CAAA,mFAAA,mDAAA,2CAAA,wDAAA,mCAAA,mFAAA,8CAAA,2CAAA,wDAAA,oBAAA,6BAAA,mFAAA,mDAAA,2CAAA,wDAAA,8BAAA,mFAAA,8CAAA,2CAAA,wDAAA,oBAAA,6CAAA,0HAAA,kIAAA,kIAAA,0IAAA,mFAAA,mDAAA,2CAAA,wDAAA,mCAAA,mFAAA,mDAAA,2CAAA,wDAAA,yCAAA,mFAAA,sDAAA,2CAAA,qDAAA,OAAA,qDAAA,OAAA,kDAAA,cAAA,qEAAA,MAAA,6DAAA,KAAA,+DAAA,WAAAK,thDA0BOC,0HACAC,kIACAC,kIACAC;AA7BP,AAyCyB,mCAAA,mFAAA,/GAACC,qPAAsD,AAAA,AAAAL;GAzChF,2MAAA,mFAAA,sxBAAA,mFAAA,wmBAAA,iDAAA,mFAAA,mDAAA,2CAAA,wDAAA,6BAAA,mFAAA,yDAAA,2CAAA,wDAAA,aAAA,qDAAA,SAAA,qDAAA,SAAA,kDAAA,SAAA,6DAAA,h+EA0CwB,4CAAA,AAAAP,kCAAA,9EAACa,4DAAKP,mOAErB,EAAA,AAAAQ,qJAAA,2CAAA,oDAAA,cAAA,wDAAA,6BAAA,uDAAA,2CAAA,mFAAA,sBAAA,2CAAA,oDAAA,cAAA,wDAAA,zrBAAQ,4CAAA,AAAAd,kCAAA,9EAACa,4DAAKP,2xBAIP,EAAA,AAAAQ,qJAAA,2CAAA,wDAAA,eAAA,uDAAA,2CAAA,uDAAA,sBAAA,2CAAA,wDAAA,3gBAAQ,4CAAA,AAAAd,kCAAA,9EAACa,4DAAKP;AAhD9B,AAwEoB,8BAAA,mFAAA,1GAACS;mBAxErB,mFAAA,uDAAA,2CAAA,wDAAA,aAAA,oDAAA,iBAAA,kBAAA,mFAAA,yDAAA,2CAAA,wDAAA,kBAAA,qDAAA,SAAA,qDAAA,QAAA,kDAAA,QAAA,6DAAA;AAAA,AAmFoB,8BAAA,mFAAA,1GAACA;mBAnFrB,mFAAA,uDAAA,2CAAA,wDAAA,aAAA,oDAAA,gBAAA,4BAAA,mIAAA,gIAAA,mFAAA,mDAAA,2CAAA,wDAAA,4BAAA,mFAAA,8CAAA,2CAAA,wDAAA,QAAA,uDAAA,2CAAA,mEAAA,MAAA,gEAAA,uBAAA,gEAAA,mFAAA,wDAAA,9mCAyFOhB,mIACAI","names":["app-creator.client.ui.main-ui/log-field","cljs.core/deref","text","re_frame.core.subscribe","app-creator.client.ui.main-ui/loader","loading?","app-creator.client.ui.main-ui/main-ui","out-path-content","p1__49808#","app-creator.client.ui.db/db-ui","app-creator.client.ui.server/server-ui","app-creator.client.ui.client/client-ui","app-creator.client.ui.containerization/cont-ui","re-frame.core/dispatch-sync","cljs.core.get","cljs.core/not","re-frame.core/dispatch"],"sourcesContent":["(ns app-creator.client.ui.main-ui\r\n  (:require [app-creator.client.ui.db :as db-ui]\r\n            [app-creator.client.ui.server :as server-ui]\r\n            [app-creator.client.ui.client :as client-ui]\r\n            [app-creator.client.ui.containerization :as cont-ui]\r\n            [app-creator.client.events :as events]\r\n            [app-creator.client.subs :as subs]\r\n            [re-frame.core :as re-frame]))\r\n\r\n; \u0410 \u0437\u0434\u0435\u0441\u044c, \u043a\u0430\u043a \u0438 \u0432\u043e \u0432\u0441\u0435\u043c \u043d\u0435\u0439\u043c\u0441\u043f\u0435\u0439\u0441\u0435 ui, \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0430 \u0441 \u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0430\u043c\u0438 \u0438 \u0434\u0438\u0441\u043f\u0430\u0442\u0447\u0430\u043c\u0438.\r\n; \u041f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c\u0441\u044f (subscribe) \u043d\u0430 \u0448\u0442\u0443\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u0444\u0430\u0439\u043b\u0435 subs.cljs.\r\n; \u0414\u0438\u0441\u043f\u0430\u0442\u0447\u0438\u043c \u0441\u043e\u0431\u044b\u0442\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u0444\u0430\u0439\u043b\u0435 events.cljs.\r\n; \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0432 \u043d\u0438\u0445.\r\n\r\n(defn log-field []\r\n  (let [text (re-frame/subscribe [::subs/log-text])]\r\n    [:div\r\n     {:class \"col-12 pt-5 mt-20 center\"\r\n      :style {:height     \"auto\"\r\n              :min-height \"80px\"}\r\n      }\r\n     [:p {:style\r\n          {:color \"#50862a\"}}\r\n      @text]]))\r\n\r\n(defn loader []\r\n  (let [loading? (re-frame/subscribe [::subs/loading?])]\r\n    [:div\r\n     {:class \"col-12 pt-5\"}\r\n     [:div\r\n      {:class \"loader\"\r\n       :style {:visibility (if @loading? \"visible\" \"hidden\")}\r\n       }]]))\r\n\r\n;(defn local-storage-component []\r\n;  (let [stored-data (.getItem (.-localStorage js/window) :all-data)]\r\n;    (println \"Now: trying to get stored data\")\r\n;    (when stored-data\r\n;      (let [parsed-data (js->clj stored-data :keywordize-keys true)]\r\n;        (println \"Now: parsed stored data\")\r\n;        (re-frame/dispatch [:set-all-data parsed-data\r\n;                            ;(:user-input parsed-data)\r\n;                            ])))))\r\n;\r\n;(re-frame/reg-event-db\r\n;  :set-all-data\r\n;  (fn [db [_ all-data]]\r\n;    ;(let [updated-db (assoc db :data input)]\r\n;      (.setItem (.-localStorage js/window) :all-data (pr-str all-data))\r\n;    all-data))\r\n;)\r\n\r\n;(defn input-field-component []\r\n;  (let [user-input @(re-frame/subscribe [:user-input])]\r\n;    [:div\r\n;     [:label \"User input: \"]\r\n;     [:input {:type \"text\"\r\n;              :value user-input\r\n;              :on-change #(re-frame/dispatch [:set-all-data (.-value (.-target %))])}]]))\r\n\r\n(defn main-ui []\r\n  (let [out-path-content (re-frame/subscribe [::subs/out-path])]\r\n    (fn []\r\n      ;[local-storage-component]\r\n      [:div\r\n       {:class \"section over-hide z-bigger\"}\r\n       [:input\r\n        {:class \"checkbox\",\r\n         :type  \"checkbox\",\r\n         :name  \"general\",\r\n         :id    \"general\"}]\r\n       [:label {:class \"theme-label\", :for \"general\"} \"Theme\"]\r\n       [:label {:class \"checkbox-label\", :for \"general\"}]\r\n       [:div {:class \"background-color\"}]\r\n       [:div\r\n        {:class \"section over-hide z-bigger\"}\r\n        [:div\r\n         {:class \"container pb-5\"}\r\n         [:div\r\n          {:class \"row justify-content-center pb-5\"}\r\n\r\n          [:div\r\n           {:class \"col-12 pt-5 big-big-text\"}\r\n           [:p {:class \"mb-4 pb-2\"} \"AppCreator\"]]\r\n          [:div\r\n           {:class \"col-12 pt-0 smaller\"}\r\n           [:p {:class \"mb-0 pb-0\"} \"Start developing right now\"]]\r\n\r\n          [db-ui/db-ui]\r\n          [server-ui/server-ui]\r\n          [client-ui/client-ui]\r\n          [cont-ui/cont-ui]\r\n\r\n          [:div\r\n           {:class \"col-12 pb-5 center no-pt\"}\r\n           [:div\r\n            {:class \"col-12 pb-5 input-field more-w\"}\r\n            [:input\r\n             {:type         \"text\",\r\n              :name         \"text\",\r\n              :id           \"result-path\",\r\n              :autocomplete \"off\",\r\n              :required     true\r\n              :on-change    #(re-frame/dispatch-sync [::events/out-path-text-change (-> % .-target .-value)])\r\n              :value        (get @out-path-content :value)}]\r\n            [:label\r\n             (if-not (get @out-path-content :valid)\r\n               {:for   \"result-path\", :class \"label-name incorrect-label\"\r\n                :style {:border-bottom-color \"red\"}}\r\n               {:for \"result-path\", :class \"label-name\"})\r\n             [:span (if-not (get @out-path-content :valid)\r\n                      {:class \"content-name\"\r\n                       :style {:color \"red\"}}\r\n                      {:class \"content-name\"})\r\n              \"Path to result\"]]]]\r\n\r\n          ;[:input {:type \"file\"\r\n          ;         :webkitdirectory \"\"\r\n          ;         ;:directory true\r\n          ;         :multiple \"\"\r\n          ;         :on-change #(let [files (-> % .-target .-files)\r\n          ;                           first-file (aget files 0)\r\n          ;                           path (.. first-file -webkitRelativePath)]\r\n          ;                       (re-frame/dispatch [::events/save-file path (aget files 0)]))}]\r\n\r\n\r\n\r\n          [:div\r\n           {:class \"col-12 pb-5 center\"}\r\n           [:button\r\n            {:class    \"big-button\"\r\n             :type     \"button\",\r\n             :name     \"create\",\r\n             :id       \"create\"\r\n             :on-click #(re-frame/dispatch [::events/create-projects])}]\r\n           [:label\r\n            {:class \"big-button\"\r\n             :for   \"create\"}\r\n            \"Create!\"]\r\n\r\n           [:button\r\n            {:class    \"big-button grey\"\r\n             :type     \"button\",\r\n             :name     \"clear\",\r\n             :id       \"clear\"\r\n             :on-click #(re-frame/dispatch [::events/clear-data])}]\r\n           [:label\r\n            {:class \"big-button\"\r\n             :for   \"clear\"}\r\n            \"Clear all\"]]\r\n\r\n          [log-field]\r\n          [loader]\r\n\r\n          [:div\r\n           {:class \"col-12 pt-5 mt-20\"}\r\n           [:p\r\n            {:class \"mt-20\"\r\n             :style {:font-weight \"300\"\r\n                     :font-size   \"15px\"}}\r\n            \"In case of any issues, please contact the developer by email:\"\r\n            [:br]\r\n            \"moskva20013@gmail.com\"]]]]]])))"]}