shadow$provide.module$node_modules$fs_extra$lib$empty$index=function(global,require,module,exports){function emptyDirSync(dir){let items;try{items=fs.readdirSync(dir)}catch{return mkdir.mkdirsSync(dir)}items.forEach(item=>{item=path.join(dir,item);remove.removeSync(item)})}global=require("module$node_modules$universalify$index").fromPromise;const fs=require("module$node_modules$fs_extra$lib$fs$index"),path=require("module$node_modules$path_browserify$index"),mkdir=require("module$node_modules$fs_extra$lib$mkdirs$index"),
remove=require("module$node_modules$fs_extra$lib$remove$index");require=global(async function(dir){let items;try{items=await fs.readdir(dir)}catch{return mkdir.mkdirs(dir)}return Promise.all(items.map(item=>remove.remove(path.join(dir,item))))});module.exports={emptyDirSync,emptydirSync:emptyDirSync,emptyDir:require,emptydir:require}}
//# sourceMappingURL=module$node_modules$fs_extra$lib$empty$index.js.map
