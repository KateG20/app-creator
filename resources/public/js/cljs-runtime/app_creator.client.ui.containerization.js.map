{"version":3,"sources":["app_creator/client/ui/containerization.cljs"],"mappings":"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","names":["app-creator.client.ui.containerization/choose-type","deploy-checked","re_frame.core.subscribe","cljs.core/deref","cljs.core._EQ_","re-frame.core/dispatch","app-creator.client.ui.containerization/network-field","network","p1__49725#","re-frame.core/dispatch-sync","cljs.core.get","cljs.core/not","app-creator.client.ui.containerization/jar-cont-box-chars","box","p1__49735#","p1__49737#","p1__49738#","p1__49739#","cont-name","img-name","run-dir","jar-path","all-content","content","cljs.core.get_in","app-creator.client.ui.containerization/jar-conts-list","jar-conts","iter__5523__auto__","s__49742","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__49744","cljs.core/chunk-buffer","i__49743","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__49741","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","j","app-creator.client.ui.containerization/plus-jar-cont-button","current-items","new-item-vec","cljs.core.apply","cljs.core/max","app-creator.client.ui.containerization/nginx-cont-box-chars","p1__49760#","p1__49761#","p1__49762#","p1__49763#","back-cont","app-creator.client.ui.containerization/nginx-conts-list","nginx-conts","s__49778","b__49780","i__49779","iter__49777","n","app-creator.client.ui.containerization/plus-nginx-cont-button","app-creator.client.ui.containerization/postgres-cont-box-chars","p1__49786#","p1__49787#","p1__49788#","pg-port","pg-pwd","app-creator.client.ui.containerization/postgres-conts-list","postgres-conts","s__49796","b__49798","i__49797","iter__49795","app-creator.client.ui.containerization/plus-postgres-cont-button","app-creator.client.ui.containerization/cont-ui","cljs.core/chunk-first"],"sourcesContent":["(ns app-creator.client.ui.containerization\r\n  (:require [re-frame.core :as re-frame]\r\n            [app-creator.client.events :as events]\r\n            [app-creator.client.subs :as subs]\r\n            [reagent.core :as reagent]))\r\n\r\n(defn choose-type []\r\n  (let [deploy-checked (re-frame/subscribe [::subs/deploy-checked])]\r\n    (fn []\r\n      [:div\r\n       [:div\r\n        {:class \"col-12 pt-5\"}\r\n        [:p {:class \"mb-4 pb-2\"} \"Choose platform\"]]\r\n\r\n       [:div\r\n        {:class \"col-12 pb-5\"}\r\n        [:input\r\n         {:class \"checkbox-comp-type\",\r\n          :type  \"radio\",\r\n          :name  \"deploy-type\",\r\n          :id    \"docker\",\r\n          :checked  (= @deploy-checked \"docker\")\r\n          :on-click #(re-frame/dispatch [::events/change-deploy-checked \"docker\"])\r\n          }]\r\n        [:label {:class \"for-checkbox-comp-type\", :for \"docker\"} \"Docker\"]\r\n        [:input\r\n         {:class \"checkbox-comp-type\",\r\n          :type  \"radio\",\r\n          :name  \"deploy-type\",\r\n          :id    \"vagrant\"\r\n          :checked  (= @deploy-checked \"vagrant\")\r\n          :on-click #(re-frame/dispatch [::events/change-deploy-checked \"vagrant\"])}]\r\n        [:label\r\n         {:class \"for-checkbox-comp-type\", :for \"vagrant\"}\r\n         \"Vagrant\"]]])))\r\n\r\n(defn network-field []\r\n  (let [network (re-frame/subscribe [::subs/docker-network])]\r\n    (fn []\r\n      [:div\r\n       {:class \"col-12 pb-5 opts-group center\"}\r\n       [:div\r\n        {:class \"col-12 pb-5 center no-pt\"}\r\n        [:div\r\n         {:class \"col-12 pb-5 input-field\"}\r\n         [:input\r\n          {:type         \"text\",\r\n           :name         \"text\",\r\n           :id           \"network-name\",\r\n           :autocomplete \"off\",\r\n           :required     true\r\n           :on-change    #(re-frame/dispatch-sync\r\n                            [::events/docker-network-change (-> % .-target .-value)])\r\n           :value (get @network :value)}]\r\n         [:label\r\n          (if-not (get @network :valid)\r\n            {:for   \"network-name\", :class \"label-name incorrect-label\"\r\n             :style {:border-bottom-color \"red\"}}\r\n            {:for \"network-name\", :class \"label-name\"})\r\n          [:span (if-not (get @network :valid)\r\n                   {:class \"content-name\"\r\n                    :style {:color \"red\"}}\r\n                   {:class \"content-name\"})\r\n           \"Network name\"]]]]])))\r\n\r\n;------------------------------------------------JAR containers-----------------------------------\r\n\r\n; \u0425\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 (\u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0431\u043e\u043a\u0441\u0435)\r\n(defn jar-cont-box-chars [box]\r\n  (fn [box]\r\n    (let [cont-name (str \"docker-jar-cont-name-\" box)\r\n          img-name (str \"docker-jar-img-name-\" box)\r\n          run-dir (str \"docker-jar-run-dir-\" box)\r\n          jar-path (str \"docker-jar-path-\" box)\r\n          all-content (re-frame/subscribe [::subs/docker-containers-content :jars])\r\n          content (get @all-content box)]\r\n      [:div\r\n       {:class \"col-12 pb-5 opts-group center no-pb\"}\r\n       [:div\r\n        {:class \"col-12 pb-5 center no-pt\"}\r\n        [:div\r\n         {:class \"col-12 pb-5 input-field\"}\r\n         [:input\r\n          {:type         \"text\",\r\n           :name         \"text\",\r\n           :id           cont-name,\r\n           :autocomplete \"off\",\r\n           :required     true\r\n           :on-change    #(re-frame/dispatch-sync\r\n                            [::events/docker-container-opts-change (-> % .-target .-value) box :jars :container-name])\r\n           :value (get-in content [:container-name :value])}]\r\n         [:label\r\n          (if-not (get-in content [:container-name :valid])\r\n            {:for   cont-name, :class \"label-name incorrect-label\"\r\n             :style {:border-bottom-color \"red\"}}\r\n            {:for cont-name, :class \"label-name\"})\r\n          [:span (if-not (get-in content [:container-name :valid])\r\n                   {:class \"content-name\"\r\n                    :style {:color \"red\"}}\r\n                   {:class \"content-name\"})\r\n           \"Container name\"]]]\r\n        [:div\r\n         {:class \"col-12 pb-5 input-field\"}\r\n         [:input\r\n          {:type         \"text\",\r\n           :name         \"text\",\r\n           :id           img-name,\r\n           :autocomplete \"off\",\r\n           :required     true\r\n           :on-change    #(re-frame/dispatch-sync\r\n                            [::events/docker-container-opts-change (-> % .-target .-value) box :jars :image-name])\r\n           :value (get-in content [:image-name :value])}]\r\n         [:label\r\n          (if-not (get-in content [:image-name :valid])\r\n            {:for   img-name, :class \"label-name incorrect-label\"\r\n             :style {:border-bottom-color \"red\"}}\r\n            {:for img-name, :class \"label-name\"})\r\n          [:span (if-not (get-in content [:image-name :valid])\r\n                   {:class \"content-name\"\r\n                    :style {:color \"red\"}}\r\n                   {:class \"content-name\"})\r\n           \"Image name\"]]]\r\n        [:div\r\n         {:class \"col-12 pb-5 input-field\"}\r\n         [:input\r\n          {:type         \"text\",\r\n           :name         \"text\",\r\n           :id           run-dir,\r\n           :autocomplete \"off\",\r\n           :required     true\r\n           :on-change    #(re-frame/dispatch-sync\r\n                            [::events/docker-container-opts-change (-> % .-target .-value) box :jars :dir-name])\r\n           :value (get-in content [:dir-name :value])}]\r\n         [:label\r\n          (if-not (get-in content [:dir-name :valid])\r\n            {:for   run-dir, :class \"label-name incorrect-label\"\r\n             :style {:border-bottom-color \"red\"}}\r\n            {:for run-dir, :class \"label-name\"})\r\n          [:span (if-not (get-in content [:dir-name :valid])\r\n                   {:class \"content-name\"\r\n                    :style {:color \"red\"}}\r\n                   {:class \"content-name\"})\r\n           \"Run directory name\"]]]]\r\n       [:div\r\n        {:class \"col-12 pb-5 center no-pt full-w\"}\r\n        [:div\r\n         {:class \"col-12 pb-5 input-field\"}\r\n         [:input\r\n          {:type         \"text\",\r\n           :name         \"text\",\r\n           :id           jar-path,\r\n           :autocomplete \"off\",\r\n           :required     true\r\n           :on-change    #(re-frame/dispatch-sync\r\n                            [::events/docker-container-opts-change (-> % .-target .-value) box :jars :jar-path])\r\n           :value (get-in content [:jar-path :value])}]\r\n         [:label\r\n          (if-not (get-in content [:jar-path :valid])\r\n            {:for   jar-path, :class \"label-name incorrect-label\"\r\n             :style {:border-bottom-color \"red\"}}\r\n            {:for jar-path, :class \"label-name\"})\r\n          [:span (if-not (get-in content [:jar-path :valid])\r\n                   {:class \"content-name\"\r\n                    :style {:color \"red\"}}\r\n                   {:class \"content-name\"})\r\n           \"Path to JAR\"]]]]])))\r\n\r\n; \u0421\u043f\u0438\u0441\u043e\u043a \u0434\u0436\u0430\u0440-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432 (\u0431\u043e\u043a\u0441\u043e\u0432)\r\n(defn jar-conts-list []\r\n  (let [jar-conts (re-frame/subscribe [::subs/docker-containers-vec :jars])]\r\n    (fn []\r\n      [:ul\r\n       {:class \"center no-marker\"}\r\n       (for [j @jar-conts]\r\n       [:li\r\n        {:class \"box\"}\r\n        [jar-cont-box-chars j]])])))\r\n\r\n; \u041a\u043d\u043e\u043f\u043a\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0436\u0430\u0440-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430\r\n(defn plus-jar-cont-button []\r\n  (fn []\r\n    (let [current-items (re-frame/subscribe [::subs/docker-containers-vec :jars])\r\n          ;new-item-vec (reagent/atom (+ 1 (last @current-items)))\r\n          new-item-vec (+ 1 (apply max @current-items))]\r\n      [:div\r\n       {:class \"col-12 pt-5 button-center\"}\r\n       [:button\r\n        {:type \"button\", :name \"plus-jar-cont\", :id \"plus-jar-cont\"\r\n         :on-click #(re-frame/dispatch [::events/add-jar-cont-item new-item-vec])}]\r\n       [:label\r\n        {:class \"mb-4 pb-2 plus-label\", :for \"plus-jar-cont\"}\r\n        \"+\"]])))\r\n\r\n;------------------------------------------------NGINX containers-----------------------------------\r\n\r\n; \u0425\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 (\u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0431\u043e\u043a\u0441\u0435)\r\n(defn nginx-cont-box-chars [box]\r\n  (fn [box]\r\n    (let [cont-name (str \"docker-nginx-cont-name-\" box)\r\n          img-name (str \"docker-nginx-img-name-\" box)\r\n          run-dir (str \"docker-nginx-run-dir-\" box)\r\n          back-cont (str \"docker-ngx-back-cont-\" box)\r\n          all-content (re-frame/subscribe [::subs/docker-containers-content :nginx])\r\n          content (get @all-content box)]\r\n      [:div\r\n       {:class \"col-12 pb-5 opts-group center no-pb\"}\r\n       [:div\r\n        {:class \"col-12 pb-5 center no-pt\"}\r\n        [:div\r\n         {:class \"col-12 pb-5 input-field\"}\r\n         [:input\r\n          {:type         \"text\",\r\n           :name         \"text\",\r\n           :id           cont-name,\r\n           :autocomplete \"off\",\r\n           :required     true\r\n           :on-change    #(re-frame/dispatch-sync\r\n                            [::events/docker-container-opts-change (-> % .-target .-value) box :nginx :container-name])\r\n           :value (get-in content [:container-name :value])}]\r\n         [:label\r\n          (if-not (get-in content [:container-name :valid])\r\n            {:for   cont-name, :class \"label-name incorrect-label\"\r\n             :style {:border-bottom-color \"red\"}}\r\n            {:for cont-name, :class \"label-name\"})\r\n          [:span (if-not (get-in content [:container-name :valid])\r\n                   {:class \"content-name\"\r\n                    :style {:color \"red\"}}\r\n                   {:class \"content-name\"})\r\n           \"Container name\"]]]\r\n        [:div\r\n         {:class \"col-12 pb-5 input-field\"}\r\n         [:input\r\n          {:type         \"text\",\r\n           :name         \"text\",\r\n           :id           img-name,\r\n           :autocomplete \"off\",\r\n           :required     true\r\n           :on-change    #(re-frame/dispatch-sync\r\n                            [::events/docker-container-opts-change (-> % .-target .-value) box :nginx :image-name])\r\n           :value (get-in content [:image-name :value])}]\r\n         [:label\r\n          (if-not (get-in content [:image-name :valid])\r\n            {:for   img-name, :class \"label-name incorrect-label\"\r\n             :style {:border-bottom-color \"red\"}}\r\n            {:for img-name, :class \"label-name\"})\r\n          [:span (if-not (get-in content [:image-name :valid])\r\n                   {:class \"content-name\"\r\n                    :style {:color \"red\"}}\r\n                   {:class \"content-name\"})\r\n           \"Image name\"]]]\r\n        [:div\r\n         {:class \"col-12 pb-5 input-field\"}\r\n         [:input\r\n          {:type         \"text\",\r\n           :name         \"text\",\r\n           :id           run-dir,\r\n           :autocomplete \"off\",\r\n           :required     true\r\n           :on-change    #(re-frame/dispatch-sync\r\n                            [::events/docker-container-opts-change (-> % .-target .-value) box :nginx :dir-name])\r\n           :value (get-in content [:dir-name :value])}]\r\n         [:label\r\n          (if-not (get-in content [:dir-name :valid])\r\n            {:for   run-dir, :class \"label-name incorrect-label\"\r\n             :style {:border-bottom-color \"red\"}}\r\n            {:for run-dir, :class \"label-name\"})\r\n          [:span (if-not (get-in content [:dir-name :valid])\r\n                   {:class \"content-name\"\r\n                    :style {:color \"red\"}}\r\n                   {:class \"content-name\"})\r\n           \"Run directory name\"]]]\r\n        [:div\r\n         {:class \"col-12 pb-5 input-field\"}\r\n         [:input\r\n          {:type         \"text\",\r\n           :name         \"text\",\r\n           :id           back-cont,\r\n           :autocomplete \"off\",\r\n           :required     true\r\n           :on-change    #(re-frame/dispatch-sync\r\n                            [::events/docker-container-opts-change\r\n                             (-> % .-target .-value) box :nginx :backend-container-name])\r\n           :value (get-in content [:backend-container-name :value])}]\r\n         [:label\r\n          (if-not (get-in content [:backend-container-name :valid])\r\n            {:for   back-cont, :class \"label-name incorrect-label\"\r\n             :style {:border-bottom-color \"red\"}}\r\n            {:for back-cont, :class \"label-name\"})\r\n          [:span (if-not (get-in content [:backend-container-name :valid])\r\n                   {:class \"content-name\"\r\n                    :style {:color \"red\"}}\r\n                   {:class \"content-name\"})\r\n           \"Backend container\"]]]]])))\r\n\r\n; \u0421\u043f\u0438\u0441\u043e\u043a nginx-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432 (\u0431\u043e\u043a\u0441\u043e\u0432)\r\n(defn nginx-conts-list []\r\n  (let [nginx-conts (re-frame/subscribe [::subs/docker-containers-vec :nginx])]\r\n    (fn []\r\n      [:ul\r\n       {:class \"center no-marker\"}\r\n       (for [n @nginx-conts]\r\n         [:li\r\n          {:class \"box\"}\r\n          [nginx-cont-box-chars n]])])))\r\n\r\n; \u041a\u043d\u043e\u043f\u043a\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f nginx-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430\r\n(defn plus-nginx-cont-button []\r\n  (fn []\r\n    (let [current-items (re-frame/subscribe [::subs/docker-containers-vec :nginx])\r\n          new-item-vec (+ 1 (apply max @current-items))]\r\n      [:div\r\n       {:class \"col-12 pt-5 button-center\"}\r\n       [:button\r\n        {:type \"button\", :name \"plus-nginx-cont\", :id \"plus-nginx-cont\"\r\n         :on-click #(re-frame/dispatch [::events/add-nginx-cont-item new-item-vec])}]\r\n       [:label\r\n        {:class \"mb-4 pb-2 plus-label\", :for \"plus-nginx-cont\"}\r\n        \"+\"]])))\r\n\r\n;------------------------------------------------POSTGRES containers-----------------------------------\r\n\r\n; \u0425\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 (\u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0431\u043e\u043a\u0441\u0435)\r\n(defn postgres-cont-box-chars [box]\r\n  (fn [box]\r\n    (let [cont-name (str \"docker-pg-cont-name-\" box)\r\n          pg-port (str \"docker-pg-port-\" box)\r\n          pg-pwd (str \"docker-pg-pwd-\" box)\r\n          all-content (re-frame/subscribe [::subs/docker-containers-content :postgres])\r\n          content (get @all-content box)]\r\n      [:div\r\n       {:class \"col-12 pb-5 opts-group center no-pb\"}\r\n       [:div\r\n        {:class \"col-12 pb-5 center no-pt\"}\r\n        [:div\r\n         {:class \"col-12 pb-5 input-field\"}\r\n         [:input\r\n          {:type         \"text\",\r\n           :name         \"text\",\r\n           :id           cont-name,\r\n           :autocomplete \"off\",\r\n           :required     true\r\n           :on-change    #(re-frame/dispatch-sync\r\n                            [::events/docker-container-opts-change\r\n                             (-> % .-target .-value) box :postgres :container-name])\r\n           :value (get-in content [:container-name :value])}]\r\n         [:label\r\n          (if-not (get-in content [:container-name :valid])\r\n            {:for   cont-name, :class \"label-name incorrect-label\"\r\n             :style {:border-bottom-color \"red\"}}\r\n            {:for cont-name, :class \"label-name\"})\r\n          [:span (if-not (get-in content [:container-name :valid])\r\n                   {:class \"content-name\"\r\n                    :style {:color \"red\"}}\r\n                   {:class \"content-name\"})\r\n           \"Container name\"]]]\r\n        [:div\r\n         {:class \"col-12 pb-5 input-field\"}\r\n         [:input\r\n          {:type         \"text\",\r\n           :name         \"text\",\r\n           :id           pg-port,\r\n           :autocomplete \"off\",\r\n           :required     true\r\n           :on-change    #(re-frame/dispatch-sync\r\n                            [::events/docker-container-opts-change (-> % .-target .-value) box :postgres :port])\r\n           :value (get-in content [:port :value])}]\r\n         [:label\r\n          (if-not (get-in content [:port :valid])\r\n            {:for   pg-port, :class \"label-name incorrect-label\"\r\n             :style {:border-bottom-color \"red\"}}\r\n            {:for pg-port, :class \"label-name\"})\r\n          [:span (if-not (get-in content [:port :valid])\r\n                   {:class \"content-name\"\r\n                    :style {:color \"red\"}}\r\n                   {:class \"content-name\"})\r\n           \"DB port\"]]]\r\n        [:div\r\n         {:class \"col-12 pb-5 input-field\"}\r\n         [:input\r\n          {:type         \"text\",\r\n           :name         \"text\",\r\n           :id           pg-pwd,\r\n           :autocomplete \"off\",\r\n           :required     true\r\n           :on-change    #(re-frame/dispatch-sync\r\n                            [::events/docker-container-opts-change (-> % .-target .-value) box :postgres :password])\r\n           :value (get-in content [:password :value])}]\r\n         [:label\r\n          (if-not (get-in content [:password :valid])\r\n            {:for   pg-pwd, :class \"label-name incorrect-label\"\r\n             :style {:border-bottom-color \"red\"}}\r\n            {:for pg-pwd, :class \"label-name\"})\r\n          [:span (if-not (get-in content [:password :valid])\r\n                   {:class \"content-name\"\r\n                    :style {:color \"red\"}}\r\n                   {:class \"content-name\"})\r\n           \"DB password\"]]]]])))\r\n\r\n; \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432 (\u0431\u043e\u043a\u0441\u043e\u0432)\r\n(defn postgres-conts-list []\r\n  (let [postgres-conts (re-frame/subscribe [::subs/docker-containers-vec :postgres])]\r\n    (fn []\r\n      [:ul\r\n       {:class \"center no-marker\"}\r\n       (for [n @postgres-conts]\r\n         [:li\r\n          {:class \"box\"}\r\n          [postgres-cont-box-chars n]])])))\r\n\r\n; \u041a\u043d\u043e\u043f\u043a\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f postgres-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430\r\n(defn plus-postgres-cont-button []\r\n  (fn []\r\n    (let [current-items (re-frame/subscribe [::subs/docker-containers-vec :postgres])\r\n          new-item-vec (+ 1 (apply max @current-items))]\r\n      [:div\r\n       {:class \"col-12 pt-5 button-center\"}\r\n       [:button\r\n        {:type \"button\", :name \"plus-postgres-cont\", :id \"plus-postgres-cont\"\r\n         :on-click #(re-frame/dispatch [::events/add-postgres-cont-item new-item-vec])}]\r\n       [:label\r\n        {:class \"mb-4 pb-2 plus-label\", :for \"plus-postgres-cont\"}\r\n        \"+\"]])))\r\n\r\n;------------------------------------------------------------------------------------------------------\r\n\r\n(defn cont-ui []\r\n  (let [deploy-checked (re-frame/subscribe [::subs/deploy-checked])]\r\n    (fn []\r\n    [:div\r\n     [:div\r\n      {:class \"col-12 pt-5 big-text\"}\r\n      [:p {:class \"mb-4 pb-2\"} \"4. Deploy\"]]\r\n\r\n     [choose-type]\r\n\r\n     [:div\r\n      {:class \"col-12 pt-5 for-docker center\", :style\r\n       {:display (if (= @deploy-checked \"docker\") \"block\" \"none\")}}\r\n\r\n      [:div\r\n       {:class \"col-12 pt-5 header-with-help\"}\r\n       [:label {:class \"plus-label mt-20 help-label\"\r\n                :style {:visibility \"hidden\"}} \"?\"]\r\n       [:p {:class \"mb-4 pb-2\"} [:p {:class \"mb-4 pb-2\"} \"Network\"]]\r\n       [:label {:class \"plus-label mt-20 help-label\" :for \"network-help\"} \"?\"]\r\n       [:button {:class \"help-button\" :id \"network-help\" :style {:display \"none\"}}]\r\n       [:div {:class \"help-div box\"}\r\n        [:p \"Name of the network to run your containers in\"]]]\r\n\r\n      [network-field]\r\n\r\n      [:div\r\n       {:class \"col-12 pt-5 header-with-help\"}\r\n       [:label {:class \"plus-label mt-20 help-label\"\r\n                :style {:visibility \"hidden\"}} \"?\"]\r\n       [:p {:class \"mb-4 pb-2\"} [:p {:class \"mb-4 pb-2\"} \"JAR containers\"]]\r\n       [:label {:class \"plus-label mt-20 help-label\" :for \"jar-cont-help\"} \"?\"]\r\n       [:button {:class \"help-button\" :id \"jar-cont-help\" :style {:display \"none\"}}]\r\n       [:div {:class \"help-div box\"}\r\n        [:p [:b \"Container name:\"] \" name of your future container\" [:br]\r\n         [:b \"Image name:\"] \" name of the image to build\" [:br]\r\n         [:b \"Run directory name:\"] \" name of the directory to build your image and run container\" [:br]\r\n         [:b \"Path to jar:\"] \" path to the jar file to put and execute in the container\" [:br]]]]\r\n\r\n      [jar-conts-list]\r\n      [plus-jar-cont-button]\r\n\r\n      [:div\r\n       {:class \"col-12 pt-5 header-with-help\"}\r\n       [:label {:class \"plus-label mt-20 help-label\"\r\n                :style {:visibility \"hidden\"}} \"?\"]\r\n       [:p {:class \"mb-4 pb-2\"} [:p {:class \"mb-4 pb-2\"} \"Nginx containers\"]]\r\n       [:label {:class \"plus-label mt-20 help-label\" :for \"nginx-cont-help\"} \"?\"]\r\n       [:button {:class \"help-button\" :id \"nginx-cont-help\" :style {:display \"none\"}}]\r\n       [:div {:class \"help-div box\"}\r\n        ; todo\r\n        [:p [:b \"Container name:\"] \" name of your future container\" [:br]\r\n         [:b \"Image name:\"] \" name of the image to build\" [:br]\r\n         [:b \"Run directory name:\"] \" name of the directory to build your image and run container\" [:br]\r\n         [:b \"Path to jar:\"] \" path to the jar file to put and execute in the container\" [:br]]]]\r\n\r\n      [nginx-conts-list]\r\n      [plus-nginx-cont-button]\r\n\r\n      [:div\r\n       {:class \"col-12 pt-5 header-with-help\"}\r\n       [:label {:class \"plus-label mt-20 help-label\"\r\n                :style {:visibility \"hidden\"}} \"?\"]\r\n       [:p {:class \"mb-4 pb-2\"} [:p {:class \"mb-4 pb-2\"} \"Postgres containers\"]]\r\n       [:label {:class \"plus-label mt-20 help-label\" :for \"pg-cont-help\"} \"?\"]\r\n       [:button {:class \"help-button\" :id \"pg-cont-help\" :style {:display \"none\"}}]\r\n       [:div {:class \"help-div box\"}\r\n        ; todo\r\n        [:p [:b \"Table name:\"] \" valid SQL-identifier for your future table\" [:br]\r\n         [:b \"Column:\"] \" valid SQL-identifier for your future table\" [:br]\r\n         [:b \"Type:\"] \" column data type, one of [bool number string date]\" [:br]]]]\r\n\r\n      [postgres-conts-list]\r\n      [plus-postgres-cont-button]]\r\n\r\n     [:div\r\n      {:class \"col-12 pt-5 for-vagrant center\", :style\r\n       {:display (if (= @deploy-checked \"vagrant\") \"block\" \"none\")}}\r\n      \"Coming soon!\" [:br] \"Please, choose another platform.\"]])))\r\n"]}