{"version":3,"sources":["app_creator/client/ui/db.cljs"],"mappings":";AAMA,uCAAA,vCAAMA;AAAN,AACE,IAAMC,aAAW,sDAAA,mFAAA,zIAACC;AAAlB,AACE;AAAA,AAAA,0FAAA,mDAAA,mFAAA,mDAAA,2CAAA,wDAAA,sBAAA,mFAAA,8CAAA,2CAAA,wDAAA,oBAAA,8BAAA,mFAAA,mDAAA,2CAAA,wDAAA,sBAAA,mFAAA,sDAAA,2CAAA,wDAAA,qBAAA,qDAAA,QAAA,qDAAA,UAAA,kDAAA,WAAA,+IAAA,6DAAA,lJAagB,6CAAA,AAAAC,4BAAA,zEAACC,6DAAGH;AAbpB,AAciB,8BAAA,mFAAA,gIAAA,1OAACI;mBAdlB,mFAAA,uDAAA,2CAAA,wDAAA,yBAAA,oDAAA,mBAAA,qBAAA,mFAAA,sDAAA,2CAAA,wDAAA,qBAAA,qDAAA,QAAA,qDAAA,UAAA,kDAAA,UAAA,8IAAA,6DAAA,jJAwBgB,6CAAA,AAAAF,4BAAA,zEAACC,6DAAGH;AAxBpB,AAyBiB,8BAAA,mFAAA,gIAAA,1OAACI;mBAzBlB,mFAAA,uDAAA,2CAAA,wDAAA,yBAAA,oDAAA,kBAAA,kBAAA,mFAAA,sDAAA,2CAAA,wDAAA,qBAAA,qDAAA,QAAA,qDAAA,UAAA,kDAAA,aAAA,iJAAA,6DAAA,pJAkCgB,6CAAA,AAAAF,4BAAA,zEAACC,6DAAGH;AAlCpB,AAmCiB,8BAAA,mFAAA,gIAAA,1OAACI;mBAnClB,mFAAA,uDAAA,2CAAA,wDAAA,yBAAA,oDAAA,qBAAA;;;AAyCJ,kDAAA,lDAAMC,4GAAwBC,IAAIC;AAAlC,AACE,kBAAKD,QAAIC;AAAT,AACE,IAAMC,KAAG,CAAA,qEAAA,TAAqBF,yDAAQC;AAAtC,AAAA,0FAAA,mDAAA,mFAAA,yDAAA,2CAAA,qDAAA,SAAA,qDAAA,QAAA,qDAAA,6DAAA,hEAEoDC;AAFpD,AAGwB,8BAAA,mFAAA,1GAACJ,sPAAoDE,QAAIC;mBAHjF,mFAAA,uDAAA,2CAAA,wDAAA,mBAAA,+DAAA,XAI4CC;;;AAGhD,6CAAA,7CAAMC,kGAAmBH,IAAIC;AAA7B,AACE,kBAAKD,QAAIC;AAAT,AACE,IAAMK,OAAK,CAAA,iEAAA,TAAiBN,yDAAQC;IAC9BM,OAAK,CAAA,iEAAA,TAAiBP,yDAAQC;IAC9BO,cAAY,sDAAA,mFAAA,zIAACb;IACbc,cAAY,4CAAA,AAAAb,5CAACc,4DAAKF,aAAYR;IAC9BW,cAAY,2DAAA,mFAAA,9IAACC,+CAAOH,0JAAsBR;AAJhD,AAAA,0FAAA,gDAAA,2CAAA,wDAAA,uBAAA,mFAAA,mDAAA,2CAAA,wDAAA,kCAAA,mFAAA,sDAAA,2CAAA,qDAAA,OAAA,qDAAA,OAAA,uDAAA,qEAAA,MAAA,6DAAA,KAAA,+DAAA,WAAAG,5NAYoBE;AAZpB,AAeqB,mCAAA,mFAAA,/GAACO,oQACuC,AAAA,AAAAT,8BAAwBJ,QAAIC;GAhBzF,wUAAA,mFAAA,i4BAAA,mFAAA,quBAAA,iCAAA,mFAAA,mDAAA,2CAAA,wDAAA,kCAAA,mFAAA,sDAAA,2CAAA,qDAAA,OAAA,qDAAA,OAAA,uDAAA,qEAAA,MAAA,6DAAA,KAAA,+DAAA,WAAAI,p4FAiBa,2DAAA,mFAAA,qDAAA,nMAACO,+CAAOD,6WAEhB,EAAA,AAAAG,kRAAA,2CAAA,yDAAA,wDAAA,6BAAA,uDAAA,2CAAA,mFAAA,sBAAA,2CAAA,yDAAA,wDAAA,pyBAAQ,2DAAA,mFAAA,qDAAA,nMAACF,+CAAOD,oTACNL,oYAEFA,2NACD,EAAA,AAAAQ,kRAAA,2CAAA,wDAAA,eAAA,uDAAA,2CAAA,uDAAA,sBAAA,2CAAA,wDAAA,xoBAAQ,2DAAA,mFAAA,qDAAA,nMAACF,+CAAOD,2vCAURJ;AAjCpB,AAoCqB,mCAAA,mFAAA,/GAACM,mQACuC,AAAA,AAAAR,8BAAwBL,QAAIC;GArCzF,uUAAA,mFAAA,g4BAAA,mFAAA,ouBAAA,+BAAA,1jEAsCa,2DAAA,mFAAA,oDAAA,lMAACW,+CAAOD,4WAEhB,EAAA,AAAAG,iRAAA,2CAAA,yDAAA,wDAAA,6BAAA,uDAAA,2CAAA,mFAAA,sBAAA,2CAAA,yDAAA,wDAAA,nyBAAQ,2DAAA,mFAAA,oDAAA,lMAACF,+CAAOD,mTACNJ,oYAEFA,2NACD,EAAA,AAAAO,iRAAA,2CAAA,wDAAA,eAAA,uDAAA,2CAAA,uDAAA,sBAAA,2CAAA,wDAAA,voBAAQ,2DAAA,mFAAA,oDAAA,lMAACF,+CAAOD,kuBAKxBZ,gDAAuBC,QAAIC;;;AAKnC,wDAAA,xDAAMc,wHAA8Bf,IAAIgB;AAAxC,AACE,IAAAC,mBAAI,AAACC,iBAAO,AAACC,eAAK,+CAAA,WAAAC,1DAACC;AAAD,AAAS,OAACxB,6CAAEG,IAAI,gBAAAoB,hBAACE;GAAUN;AAA7C,AAAA,oBAAAC;AAAAA;;AAAA;;;AAGF,iDAAA,jDAAMM,0GAAuBvB;AAA7B,AACI,kBAAKA;AAAL,AACE,IAAME,KAAG,CAAA,2DAAoBF;IACvBwB,gBAAc,sDAAA,mFAAA,zIAAC7B;IACf8B,cAAY,CAAA,MAAK,8DAAA,AAAA7B,9DAACmB,sDAA6Bf,wBAAKwB;IACpDE,eAAa,gDAAA,hDAACC,mIAAc3B,QAAIyB;AAHtC,AAAA,0FAAA,mDAAA,mFAAA,yDAAA,2CAAA,qDAAA,SAAA,qDAAA,OAAA,qDAAA,6DAAA,hEAKiDvB;AALjD,AAMsB,8BAAA,mFAAA,wIAAA,AAAAN,lPAACE,kQAAmD4B;mBAN1E,mFAAA,uDAAA,2CAAA,wDAAA,mBAAA,+DAAA,XAO0CxB;;;AAGhD,6CAAA,7CAAM0B;AAAN,AACI;AAAA,AACE,IAAMJ,gBAAc,sDAAA,mFAAA,zIAAC7B;IACfkC,cAAY,CAAA,MAAK,iBAAAZ,mBAAI,4DAAA,AAAArB,5DAACkC,8CAAMC,8BAAKP;AAAhB,AAAA,oBAAAP;AAAAA;;AAAA;;;AADvB,AAAA,0FAAA,mDAAA,2CAAA,wDAAA,oCAAA,mFAAA,yDAAA,2CAAA,qDAAA,SAAA,qDAAA,aAAA,kDAAA,aAAA,6DAAA;AAAA,AAQc,8BAAA,mFAAA,1GAACnB,mOAA2C+B;mBAR1D,mFAAA,uDAAA,2CAAA,wDAAA,uBAAA,oDAAA,qBAAA;;;AAYN,8CAAA,9CAAMG,oGAAoBhC;AAA1B,AACE,kBAAKA;AAAL,AACE,IAAME,KAAG,CAAA,2DAAoBF;AAA7B,AAAA,0FAAA,mDAAA,mFAAA,yDAAA,2CAAA,qDAAA,SAAA,qDAAA,QAAA,qDAAA,6DAAA,hEAEoDE;AAFpD,AAGwB,8BAAA,mFAAA,1GAACJ,wOAA6CE;mBAHtE,mFAAA,uDAAA,2CAAA,wDAAA,mBAAA,+DAAA,XAI4CE;;;AAGhD,6CAAA,7CAAM+B,kGAAmBjC;AAAzB,AACI,kBAAKA;AAAL,AACE,gBAAA,AAAAJ,ZAAMsC,4BAAW,sDAAA,mFAAA,zIAACvC;IACZwC,gBAAc,+CAAA,WAAAC,1DAACf;AAAD,AAAS,OAACxB,6CAAEG,QAAI,gBAAAoC,hBAACd;GAAUY;AAD/C,AAAA,0FAAA,kDAAA,2CAAA,wDAAA,sBAIC,iBAAAG,qBAAA,mEAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBA6yE4C,AAAAiC,sBAAAtC;IA7yE5CM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,WAAA,AAAAK,eAAAN,gBAAAK,tCAAMS;AAAN,AAAA,AAAA,AAAAP,uBAAAJ,SAAA,mFACG3C,2CAAkB,AAACmB,gBAAMmC,MAAM,AAACvC,iBAAOuC;;AAD1C,eAAA,CAAAT,WAAA;;;;AAAA;;;;;AAAA,OAAAG,qBAAA,AAAAC,gBAAAN,UAAA,AAAAO,yDAAA,AAAAC,qBAAAhB;;AAAA,OAAAa,qBAAA,AAAAC,gBAAAN,UAAA;;;AAAA,WAAA,AAAAxB,gBAAAgB,vBAAMmB;AAAN,AAAA,OAAAF,eAAA,mLAAA,AAAAF,yDAAA,AAAAG,eAAAlB,xKACGnC,2CAAkB,AAACmB,gBAAMmC,MAAM,AAACvC,iBAAOuC;;;AAD1C;;;;GAAA,KAAA;;AAAA,AAAA,OAAApB,mBAAWF;;;;AAQlB,qCAAA,rCAAMuB,kFAAW1D;AAAjB,AACE,kBAAKA;AAAL,AACE,IAAMQ,cAAY,sDAAA,mFAAA,zIAACb;IACbiE,UAAQ,4CAAA,AAAAhE,5CAACc,4DAAKF,aAAYR;IAC1BE,KAAG,CAAA,0DAAmBF;IACtB6D,gBAAc,sDAAA,mFAAA,zIAAClE;IACfmE,gBAAc,sDAAA,mFAAA,zIAACnE;AAJrB,AAAA,0FAAA,gDAAA,2CAAA,wDAAA,4CAAA,mFAAA,kDAAA,2CAAA,wDAAA,sBAAA,mFAAA,gDAAA,2CAAA,wDAAA,uBAAA,mFAAA,mDAAA,2CAAA,wDAAA,kCAAA,mFAAA,sDAAA,2CAAA,qDAAA,OAAA,qDAAA,OAAA,qDAAA,qEAAA,MAAA,6DAAA,KAAA,+DAAA,WAAAgE,1NA0CsBzD;AA1CtB,AA6CuB,mCAAA,mFAAA,/GAACW,kQACsC,AAAA,AAAA8C,8BAAwB3D;GA9CtF,oUAAA,mFAAA,y3BAAA,mFAAA,iuBAAA,qCAAA,+JAAA,8IAAA,h2EA+Ce,uDAAA,mFAAA,qDAAA,/LAACY,+CAAOgD,yWAEhB,EAAA,AAAA9C,8QAAA,2CAAA,uDAAA,wDAAA,6BAAA,uDAAA,2CAAA,mFAAA,sBAAA,2CAAA,uDAAA,wDAAA,5xBAAQ,uDAAA,mFAAA,qDAAA,/LAACF,+CAAOgD,gTACN1D,kYAEFA,yNACD,EAAA,AAAAY,8QAAA,2CAAA,wDAAA,eAAA,uDAAA,2CAAA,uDAAA,sBAAA,2CAAA,wDAAA,poBAAQ,uDAAA,mFAAA,qDAAA,/LAACF,+CAAOgD,quBAKxB5B,4CAAmBhC,mHAGrBiC,2CAAkBjC,mGAClBuB,+CAAsBvB;;;AAG9B,sCAAA,tCAAM+D;AAAN,AACE,IAAMC,SAAO,sDAAA,mFAAA,zIAACrE;AAAd,AACE;AAAA,AAAA,0FAAA,kDAAA,2CAAA,wDAAA,kBAGG,iBAAA0C,qBAAA,4DAAA4B;AAAA,AAAA,YAAA1B,kBAAA,KAAA;AAAA,AAAA,IAAA0B,eAAAA;;AAAA,AAAA,IAAAzB,qBAAA,AAAAC,cAAAwB;AAAA,AAAA,GAAAzB;AAAA,AAAA,IAAAyB,eAAAzB;AAAA,AAAA,GAAA,AAAAE,6BAAAuB;AAAA,IAAAtB,kBA6tE4C,AAAAiC,sBAAAX;IA7tE5CrB,qBAAA,AAAAC,gBAAAF;IAAAuB,WAAA,AAAAnB,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAuB,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAvB;AAAA,QAAA,AAAAK,eAAAN,gBAAAwB,nCAAME;AAAN,AAAA,AAAA,AAAAnB,uBAAAgB,SAAA,mFACGR,mCAAUW;;AADb,eAAA,CAAAF,WAAA;;;;AAAA;;;;;AAAA,OAAAhB,qBAAA,AAAAC,gBAAAc,UAAA,AAAAE,kDAAA,AAAAd,qBAAAW;;AAAA,OAAAd,qBAAA,AAAAC,gBAAAc,UAAA;;;AAAA,QAAA,AAAA5C,gBAAA2C,pBAAMI;AAAN,AAAA,OAAAd,eAAA,gIAAA,AAAAa,kDAAA,AAAAZ,eAAAS,9GACGP,mCAAUW;;;AADb;;;;GAAA,KAAA;;AAAA,AAAA,OAAAhC,mBAAA,AAAAzC,gBAASoE;;;;AAIhB,iCAAA,jCAAMM;AAAN,AACE,IAAM5E,aAAW,sDAAA,mFAAA,zIAACC;IACZ4E,QAAM,sDAAA,mFAAA,zIAAC5E;AADb,AAEE;AAAA,AAAA,0FAAA,mDAAA,mFAAA,mDAAA,2CAAA,wDAAA,+BAAA,mFAAA,8CAAA,2CAAA,wDAAA,oBAAA,8BAAA,gIAAA,mFAAA,mDAAA,2CAAA,wDAAA,kCAAA,uDAAA,2CAAA,kLAAA,mFAAA,mDAAA,2CAAA,wDAAA,uCAAA,mFAAA,uDAAA,2CAAA,wDAAA,8BAAA,uDAAA,2CAAA,iEAAA,yBAAA,YAAA,mFAAA,8CAAA,2CAAA,wDAAA,oBAAA,qBAAA,mFAAA,uDAAA,2CAAA,wDAAA,8BAAA,oDAAA,uBAAA,YAAA,mFAAA,yDAAA,2CAAA,wDAAA,cAAA,kDAAA,eAAA,uDAAA,2CAAA,0DAAA,+BAAA,mFAAA,mDAAA,2CAAA,wDAAA,uBAAA,oFAAA,8CAAA,mFAAA,+CAAA,mBAAA,gDAAA,mFAAA,wDAAA,mFAAA,+CAAA,gBAAA,wCAAA,mFAAA,wDAAA,mFAAA,+CAAA,oBAAA,4BAAA,mFAAA,wDAAA,mFAAA,+CAAA,oBAAA,qCAAA,mFAAA,gFAAA,mFAAA,mDAAA,2CAAA,wDAAA,wCAAA,mFAAA,mDAAA,2CAAA,wDAAA,mCAAA,mFAAA,mDAAA,2CAAA,wDAAA,kCAAA,mFAAA,sDAAA,2CAAA,qDAAA,OAAA,qDAAA,OAAA,kDAAA,UAAA,qEAAA,MAAA,6DAAA,KAAA,+DAAA,WAAA6E,h7KAMI/E,odAKW,wFAAA,QAAA,9FAAI,6CAAA,AAAAG,4BAAA,zEAACC,6DAAGH;AAXvB,AAsCwB,mCAAA,mFAAA,/GAACmB,0PACmC,AAAA,AAAA2D;GAvC5D,yVAAA,mFAAA,45BAAA,mFAAA,svBAAA,kCAAA,mFAAA,mDAAA,2CAAA,wDAAA,kCAAA,mFAAA,sDAAA,2CAAA,qDAAA,OAAA,qDAAA,OAAA,kDAAA,UAAA,qEAAA,MAAA,6DAAA,KAAA,+DAAA,WAAAC,v8FAwCgB,+CAAA,AAAA7E,uBAAA,mFAAA,2DAAA,pNAACgB,+DAAQ2D,8WAEjB,EAAA,AAAAzD,mSAAA,2CAAA,oDAAA,UAAA,wDAAA,6BAAA,uDAAA,2CAAA,mFAAA,sBAAA,2CAAA,oDAAA,UAAA,wDAAA,/zBAAQ,+CAAA,AAAAlB,uBAAA,mFAAA,2DAAA,pNAACgB,+DAAQ2D,85BAIV,EAAA,AAAAzD,mSAAA,2CAAA,wDAAA,eAAA,uDAAA,2CAAA,uDAAA,sBAAA,2CAAA,wDAAA,zpBAAQ,+CAAA,AAAAlB,uBAAA,mFAAA,2DAAA,pNAACgB,+DAAQ2D;AA9ChC,AA2DwB,mCAAA,mFAAA,/GAAC1D,sPAAsD,AAAA,AAAA4D;GA3D/E,oVAAA,mFAAA,u5BAAA,mFAAA,ivBAAA,+BAAA,mFAAA,mDAAA,2CAAA,wDAAA,kCAAA,mFAAA,sDAAA,2CAAA,qDAAA,OAAA,qDAAA,OAAA,kDAAA,cAAA,qEAAA,MAAA,6DAAA,KAAA,+DAAA,WAAAC,z7FA4DgB,+CAAA,AAAA9E,uBAAA,mFAAA,sDAAA,/MAACgB,+DAAQ2D,yWAEjB,EAAA,AAAAzD,8RAAA,2CAAA,oDAAA,UAAA,wDAAA,6BAAA,uDAAA,2CAAA,mFAAA,sBAAA,2CAAA,oDAAA,UAAA,wDAAA,1zBAAQ,+CAAA,AAAAlB,uBAAA,mFAAA,sDAAA,/MAACgB,+DAAQ2D,y5BAIV,EAAA,AAAAzD,8RAAA,2CAAA,wDAAA,eAAA,uDAAA,2CAAA,uDAAA,sBAAA,2CAAA,wDAAA,ppBAAQ,+CAAA,AAAAlB,uBAAA,mFAAA,sDAAA,/MAACgB,+DAAQ2D;AAlEhC,AAgFwB,mCAAA,mFAAA,/GAAC1D,6PAA0D,AAAA,AAAA6D;GAhFnF,2VAAA,mFAAA,s6BAAA,mFAAA,wvBAAA,mCAAA,mFAAA,mDAAA,2CAAA,wDAAA,kCAAA,mFAAA,sDAAA,2CAAA,qDAAA,OAAA,qDAAA,OAAA,kDAAA,cAAA,qEAAA,MAAA,6DAAA,KAAA,+DAAA,WAAAC,19FAiFgB,+CAAA,AAAA/E,uBAAA,mFAAA,6DAAA,tNAACgB,+DAAQ2D,gXAEjB,EAAA,AAAAzD,qSAAA,2CAAA,oDAAA,cAAA,wDAAA,6BAAA,uDAAA,2CAAA,mFAAA,sBAAA,2CAAA,oDAAA,cAAA,wDAAA,z0BAAQ,+CAAA,AAAAlB,uBAAA,mFAAA,6DAAA,tNAACgB,+DAAQ2D,w6BAIV,EAAA,AAAAzD,qSAAA,2CAAA,wDAAA,eAAA,uDAAA,2CAAA,uDAAA,sBAAA,2CAAA,wDAAA,3pBAAQ,+CAAA,AAAAlB,uBAAA,mFAAA,6DAAA,tNAACgB,+DAAQ2D;AAvFhC,AAoGwB,mCAAA,mFAAA,/GAAC1D,8PAA0D,AAAA,AAAA8D;GApGnF,0VAAA,mFAAA,q6BAAA,mFAAA,uvBAAA,mDAAA,mFAAA,mDAAA,2CAAA,wDAAA,uCAAA,mFAAA,uDAAA,2CAAA,wDAAA,8BAAA,uDAAA,2CAAA,iEAAA,yBAAA,YAAA,mFAAA,8CAAA,2CAAA,wDAAA,oBAAA,iBAAA,mFAAA,uDAAA,2CAAA,wDAAA,8BAAA,oDAAA,yBAAA,YAAA,mFAAA,yDAAA,2CAAA,wDAAA,cAAA,kDAAA,iBAAA,uDAAA,2CAAA,0DAAA,+BAAA,mFAAA,mDAAA,2CAAA,wDAAA,uBAAA,oFAAA,8CAAA,mFAAA,+CAAA,sBAAA,8CAAA,mFAAA,wDAAA,mFAAA,+CAAA,kBAAA,8CAAA,mFAAA,wDAAA,mFAAA,+CAAA,gBAAA,sDAAA,mFAAA,gFAAA,mFAAA,mDAAA,2CAAA,wDAAA,0BAAA,uDAAA,2CAAA,0DAAA,uBAAA,uIAAA,8IAAA,mFAAA,mDAAA,2CAAA,wDAAA,iCAAA,uDAAA,2CAAA,iLAAA,eAAA,mFAAA,wDAAA,gDAAA,mFAAA,mDAAA,2CAAA,wDAAA,oCAAA,uDAAA,2CAAA,oLAAA,eAAA,mFAAA,wDAAA,99OAqGgB,+CAAA,AAAA/E,uBAAA,mFAAA,4DAAA,rNAACgB,+DAAQ2D,+WAEjB,EAAA,AAAAzD,oSAAA,2CAAA,oDAAA,cAAA,wDAAA,6BAAA,uDAAA,2CAAA,mFAAA,sBAAA,2CAAA,oDAAA,cAAA,wDAAA,x0BAAQ,+CAAA,AAAAlB,uBAAA,mFAAA,4DAAA,rNAACgB,+DAAQ2D,u6BAIV,EAAA,AAAAzD,oSAAA,2CAAA,wDAAA,eAAA,uDAAA,2CAAA,uDAAA,sBAAA,2CAAA,wDAAA,1pBAAQ,+CAAA,AAAAlB,uBAAA,mFAAA,4DAAA,rNAACgB,+DAAQ2D,q4IAqB1BR,uIACDnC,ieAIiB,uFAAA,QAAA,7FAAI,6CAAA,AAAAhC,4BAAA,zEAACC,6DAAGH,2qBAIR,0FAAA,QAAA,hGAAI,6CAAA,AAAAE,4BAAA,zEAACC,6DAAGH","names":["app-creator.client.ui.db/choose-type","db-checked","re_frame.core.subscribe","cljs.core/deref","cljs.core._EQ_","re-frame.core/dispatch","app-creator.client.ui.db/minus-table-row-button","box","row","id","app-creator.client.ui.db/table-column-item","p1__49727#","p1__49730#","name","type","all-content","box-content","cljs.core.get","row-content","cljs.core.get_in","re-frame.core/dispatch-sync","cljs.core/not","app-creator.client.ui.db/find-last-item-number-in-box","vector","or__5045__auto__","cljs.core/second","cljs.core/last","p1__49740#","cljs.core.filter","cljs.core/first","app-creator.client.ui.db/plus-table-row-button","current-items","new-col-num","new-item-vec","reagent.core.atom","app-creator.client.ui.db/plus-table-button","new-item-id","cljs.core.apply","cljs.core/max","app-creator.client.ui.db/minus-table-button","app-creator.client.ui.db/table-box-columns","all-items","our-box-items","p1__49747#","iter__5523__auto__","s__49757","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__49759","cljs.core/chunk-buffer","i__49758","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__49756","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","item","app-creator.client.ui.db/table-box","p1__49764#","content","t-vec-content","c-vec-content","app-creator.client.ui.db/table-list","tables","s__49771","b__49773","i__49772","iter__49770","t","app-creator.client.ui.db/db-ui","props","p1__49781#","p1__49782#","p1__49783#","p1__49784#","cljs.core/chunk-first"],"sourcesContent":["(ns app-creator.client.ui.db\r\n  (:require [re-frame.core :as re-frame]\r\n            [app-creator.client.events :as events]\r\n            [app-creator.client.subs :as subs]\r\n            [reagent.core :as reagent]))\r\n\r\n(defn choose-type []\r\n  (let [db-checked (re-frame/subscribe [::subs/db-checked])]\r\n    (fn []\r\n      [:div\r\n       [:div\r\n        {:class \"col-12 pt-5\"}\r\n        [:p {:class \"mb-4 pb-2\"} \"Choose type\"]]\r\n\r\n       [:div\r\n        {:class \"col-12 pb-5\"}\r\n        [:input\r\n         {:class    \"checkbox-comp-type\",\r\n          :type     \"radio\",\r\n          :name     \"db-type\",\r\n          :id       \"postgres\",\r\n          :checked  (= @db-checked \"postgres\")\r\n          :on-click #(re-frame/dispatch [::events/change-db-checked \"postgres\"])\r\n          }]\r\n        [:label\r\n         {:class \"for-checkbox-comp-type\", :for \"postgres\"}\r\n         \"PostgreSQL\"]\r\n        [:input\r\n         {:class    \"checkbox-comp-type\",\r\n          :type     \"radio\",\r\n          :name     \"db-type\",\r\n          :id       \"mongodb\"\r\n          :checked  (= @db-checked \"mongodb\")\r\n          :on-click #(re-frame/dispatch [::events/change-db-checked \"mongodb\"])}]\r\n        [:label\r\n         {:class \"for-checkbox-comp-type\", :for \"mongodb\"}\r\n         \"MongoDB\"]\r\n        [:input\r\n         {:class    \"checkbox-comp-type\",\r\n          :type     \"radio\",\r\n          :name     \"db-type\",\r\n          :id       \"clickhouse\"\r\n          :checked  (= @db-checked \"clickhouse\")\r\n          :on-click #(re-frame/dispatch [::events/change-db-checked \"clickhouse\"])}]\r\n        [:label\r\n         {:class \"for-checkbox-comp-type\", :for \"clickhouse\"}\r\n         \"ClickHouse\"]]])))\r\n\r\n; \u041a\u043d\u043e\u043f\u043a\u0430 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\r\n(defn minus-table-row-button [box row]\r\n  (fn [box row]\r\n    (let [id (str \"minus-column-\" box \"-\" row)]\r\n      [:div\r\n       [:button {:type     \"button\", :name \"minus\", :id id\r\n                 :on-click #(re-frame/dispatch [::events/minus-table-column-item box row])}]\r\n       [:label {:class \"plus-label mt-20\", :for id} \"-\"]])))\r\n\r\n; \u041a\u043e\u043b\u043e\u043d\u043a\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u044b (\u0441\u0442\u0440\u043e\u043a\u0430 \u0432 \u0431\u043e\u043a\u0441\u0435)\r\n(defn table-column-item [box row]\r\n  (fn [box row]\r\n    (let [name (str \"col-name-\" box \"-\" row)\r\n          type (str \"col-type-\" box \"-\" row)\r\n          all-content (re-frame/subscribe [::subs/postgres-tables-content])\r\n          box-content (get @all-content box)\r\n          row-content (get-in box-content [:columns row])]\r\n      [:li\r\n       {:class \"table-row-li\"}\r\n       [:div\r\n        {:class \"col-12 pb-5 input-field\"}\r\n        [:input\r\n         {:type         \"text\",\r\n          :name         \"text\",\r\n          :id           name,\r\n          :autocomplete \"off\",\r\n          :required     true\r\n          :on-change    #(re-frame/dispatch-sync\r\n                           [::events/postgres-column-name-change (-> % .-target .-value) box row])\r\n          :value (get-in row-content [:name :value])}]\r\n        [:label\r\n         (if-not (get-in row-content [:name :valid])\r\n           {:for   name, :class \"label-name incorrect-label\"\r\n            :style {:border-bottom-color \"red\"}}\r\n           {:for name, :class \"label-name\"})\r\n         [:span (if-not (get-in row-content [:name :valid])\r\n                  {:class \"content-name\"\r\n                   :style {:color \"red\"}}\r\n                  {:class \"content-name\"})\r\n          \"Column\"]]]\r\n       [:div\r\n        {:class \"col-12 pb-5 input-field\"}\r\n        [:input\r\n         {:type         \"text\",\r\n          :name         \"text\",\r\n          :id           type,\r\n          :autocomplete \"off\",\r\n          :required     true\r\n          :on-change    #(re-frame/dispatch-sync\r\n                           [::events/postgres-column-opts-change (-> % .-target .-value) box row])\r\n          :value (get-in row-content [:opts :value])}]\r\n        [:label\r\n         (if-not (get-in row-content [:opts :valid])\r\n           {:for   type, :class \"label-name incorrect-label\"\r\n            :style {:border-bottom-color \"red\"}}\r\n           {:for type, :class \"label-name\"})\r\n         [:span (if-not (get-in row-content [:opts :valid])\r\n                  {:class \"content-name\"\r\n                   :style {:color \"red\"}}\r\n                  {:class \"content-name\"})\r\n          \"Type\"]]]\r\n       [minus-table-row-button box row]\r\n       ])))\r\n\r\n; \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0432\u0443\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0442\u0438\u043f\u0430 [[0 0] [0 1] [0 2] [1 1]]\r\n; \u0438 \u0434\u043b\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 box=0 \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e 2\r\n(defn find-last-item-number-in-box [box vector]\r\n  (or (second (last (filter #(= box (first %)) vector))) -1))\r\n\r\n; \u041a\u043d\u043e\u043f\u043a\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\r\n(defn plus-table-row-button [box]\r\n    (fn [box]\r\n      (let [id (str \"plus-column-\" box)\r\n            current-items (re-frame/subscribe [::subs/postgres-columns-vec])\r\n            new-col-num (+ 1 (find-last-item-number-in-box box @current-items))\r\n            new-item-vec (reagent/atom [box new-col-num])]\r\n      [:div\r\n       [:button {:type     \"button\", :name \"plus\", :id id\r\n                 :on-click #(re-frame/dispatch [::events/add-table-column-item @new-item-vec])}]\r\n       [:label {:class \"plus-label mt-20\", :for id} \"+\"]])))\r\n\r\n; \u041a\u043d\u043e\u043f\u043a\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u044b\r\n(defn plus-table-button []\r\n    (fn []\r\n      (let [current-items (re-frame/subscribe [::subs/postgres-tables-vec])\r\n            new-item-id (+ 1 (or (apply max @current-items) -1))]\r\n      [:div\r\n       {:class \"col-12 pt-5 button-center\"}\r\n       [:button\r\n        {:type     \"button\",\r\n         :name     \"plus-table\",\r\n         :id       \"plus-table\"\r\n         :on-click #(re-frame/dispatch [::events/add-table-item new-item-id])}]\r\n       [:label {:class \"mb-4 pb-2 plus-label\", :for \"plus-table\"} \"+\"]])))\r\n\r\n; \u041a\u043d\u043e\u043f\u043a\u0430 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u044b\r\n(defn minus-table-button [box]\r\n  (fn [box]\r\n    (let [id (str \"minus-table-\" box)]\r\n      [:div\r\n       [:button {:type     \"button\", :name \"minus\", :id id\r\n                 :on-click #(re-frame/dispatch [::events/minus-table-item box])}]\r\n       [:label {:class \"plus-label mt-20\", :for id} \"-\"]])))\r\n\r\n; \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 (\u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0431\u043e\u043a\u0441\u0435)\r\n(defn table-box-columns [box]\r\n    (fn [box]\r\n      (let [all-items @(re-frame/subscribe [::subs/postgres-columns-vec])\r\n            our-box-items (filter #(= box (first %)) all-items)]\r\n      [:ul\r\n       {:class \"db-col-list\"}\r\n       (for [item our-box-items]\r\n         [table-column-item (first item) (second item)]\r\n         )])))\r\n\r\n; \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u043e\u043a\u0441\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\r\n; \u041a\u043e\u0433\u0434\u0430 \u044d\u0442\u043e \u0431\u044b\u043b\u043e \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u043e \u0432 table-list, \u043e\u043d\u043e \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u043b\u043e, \u0445\u043e\u0442\u044f let \u0431\u044b\u043b\u043e \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435.\r\n; \u0425\u043c, \u0430 \u0435\u0449\u0435 \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u0435\u0441\u043b\u0438 \u0442\u0443\u0442 let \u0441\u043d\u0430\u0440\u0443\u0436\u0438 fn...\r\n; \u041d\u043e \u0435\u0441\u043b\u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u044d\u0442\u043e \u0432 table-list \u0434\u0430\u0436\u0435 \u0441 let \u0432\u043d\u0443\u0442\u0440\u0438, \u0442\u0430\u043c \u043e\u043d\u043e \u0432\u0441\u0435 \u0440\u0430\u0432\u043d\u043e \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442.\r\n(defn table-box [box]\r\n  (fn [box]\r\n    (let [all-content (re-frame/subscribe [::subs/postgres-tables-content])\r\n          content (get @all-content box)\r\n          id (str \"table-name-\" box)\r\n          t-vec-content (re-frame/subscribe [::subs/postgres-tables-vec])\r\n          c-vec-content (re-frame/subscribe [::subs/postgres-columns-vec])]\r\n      [:li\r\n       {:class \"col-12 pb-5 opts-group center box\"}\r\n       ;[:p {:style {:font-size \"10px\"}} content]\r\n       ;[:p {:style {:font-size \"10px\" :color \"black\"}} t-vec-content]\r\n       ;[:p {:style {:font-size \"10px\" :color \"black\"}} c-vec-content]\r\n\r\n       ;[:div\r\n       ; {:class \"col-12 pb-5 input-field\"}\r\n       ; [:input\r\n       ;  {:type         \"text\",\r\n       ;   :name         \"text\",\r\n       ;   :id           id,\r\n       ;   :autocomplete \"off\",\r\n       ;   :required     true\r\n       ;   :on-change    #(re-frame/dispatch-sync\r\n       ;                    [::events/postgres-table-name-change (-> % .-target .-value) box])\r\n       ;   :value (get-in content [:name :value])}]\r\n       ; [:label\r\n       ;  (if-not (get-in content [:name :valid])\r\n       ;    {:for   id, :class \"label-name incorrect-label\"\r\n       ;     :style {:border-bottom-color \"red\"}}\r\n       ;    {:for id, :class \"label-name\"})\r\n       ;  [:span (if-not (get-in content [:name :valid])\r\n       ;           {:class \"content-name\"\r\n       ;            :style {:color \"red\"}}\r\n       ;           {:class \"content-name\"})\r\n       ;   \"Table name\"]]]\r\n\r\n       [:ul\r\n        {:class \"db-col-list\"}\r\n        [:li\r\n         {:class \"table-row-li\"}\r\n         [:div\r\n          {:class \"col-12 pb-5 input-field\"}\r\n          [:input\r\n           {:type         \"text\",\r\n            :name         \"text\",\r\n            :id           id,\r\n            :autocomplete \"off\",\r\n            :required     true\r\n            :on-change    #(re-frame/dispatch-sync\r\n                             [::events/postgres-table-name-change (-> % .-target .-value) box])\r\n            :value (get-in content [:name :value])}]\r\n          [:label\r\n           (if-not (get-in content [:name :valid])\r\n             {:for   id, :class \"label-name incorrect-label\"\r\n              :style {:border-bottom-color \"red\"}}\r\n             {:for id, :class \"label-name\"})\r\n           [:span (if-not (get-in content [:name :valid])\r\n                    {:class \"content-name\"\r\n                     :style {:color \"red\"}}\r\n                    {:class \"content-name\"})\r\n            \"Table name\"]]]\r\n         [minus-table-button box]\r\n         ]]\r\n\r\n       [table-box-columns box]\r\n       [plus-table-row-button box]])))\r\n\r\n; \u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0430\u0431\u043b\u0438\u0446 (\u0431\u043e\u043a\u0441\u043e\u0432)\r\n(defn table-list []\r\n  (let [tables (re-frame/subscribe [::subs/postgres-tables-vec])]\r\n    (fn []\r\n      [:ul\r\n       {:class \"db-list\"}\r\n       (for [t @tables]\r\n         [table-box t]\r\n         )])))\r\n\r\n(defn db-ui []\r\n  (let [db-checked (re-frame/subscribe [::subs/db-checked])\r\n        props (re-frame/subscribe [::subs/postgres-data])]\r\n    (fn []\r\n      [:div\r\n       [:div\r\n        {:class \"col-12 pt-5 big-text\"}\r\n        [:p {:class \"mb-4 pb-2\"} \"1. Database\"]]\r\n\r\n       [choose-type]\r\n\r\n       [:div\r\n        {:class \"col-12 pt-5 for-postgres center\",\r\n         :style\r\n         {:display (if (= @db-checked \"postgres\") \"block\" \"none\")}}\r\n\r\n        [:div\r\n         {:class \"col-12 pt-5 header-with-help\"}\r\n         [:label {:class \"plus-label mt-20 help-label\"\r\n                  :style {:visibility \"hidden\"}} \"?\"]\r\n         [:p {:class \"mb-4 pb-2\"} \"Properties\"]\r\n         [:label {:class \"plus-label mt-20 help-label\" :for \"db-prop-help\"} \"?\"]\r\n         [:button {:class \"help-button\" :id \"db-prop-help\" :style {:display \"none\"}}]\r\n         [:div {:class \"help-div box\"}\r\n          [:p [:b \"DB name:\"] \" valid SQL-identifier of your future database\" [:br]\r\n           [:b \"Host:\"] \" valid host of your PostgreSQL server\" [:br]\r\n           [:b \"Username:\"] \" your PostgreSQL username\" [:br]\r\n           [:b \"Password:\"] \" password for your PostgreSQL user\" [:br]]]]\r\n\r\n        [:div\r\n         {:class \"col-12 pb-5 opts-group center\"}\r\n         [:div\r\n          {:class \"col-12 pb-5 center no-pt\"}\r\n          [:div\r\n           {:class \"col-12 pb-5 input-field\"}\r\n           [:input\r\n            {:type         \"text\",\r\n             :name         \"text\",\r\n             :id           \"db-name\",\r\n             :autocomplete \"off\",\r\n             :required     true\r\n             :on-change    #(re-frame/dispatch-sync\r\n                              [::events/postgres-db-name-change (-> % .-target .-value)])\r\n             :value (get-in @props [:db-name :value])}]\r\n           [:label\r\n            (if-not (get-in @props [:db-name :valid])\r\n              {:for   \"db-name\", :class \"label-name incorrect-label\"\r\n               :style {:border-bottom-color \"red\"}}\r\n              {:for \"db-name\", :class \"label-name\"})\r\n            [:span (if-not (get-in @props [:db-name :valid])\r\n                     {:class \"content-name\"\r\n                      :style {:color \"red\"}}\r\n                     {:class \"content-name\"})\r\n             \"DB name\"]]]\r\n          [:div\r\n           {:class \"col-12 pb-5 input-field\"}\r\n           [:input\r\n            {:type         \"text\",\r\n             :name         \"text\",\r\n             :id           \"db-host\",\r\n             :autocomplete \"off\",\r\n             :required     true\r\n             :on-change    #(re-frame/dispatch-sync [::events/postgres-host-change (-> % .-target .-value)])\r\n             :value (get-in @props [:host :value])}]\r\n           [:label\r\n            (if-not (get-in @props [:host :valid])\r\n              {:for   \"db-host\", :class \"label-name incorrect-label\"\r\n               :style {:border-bottom-color \"red\"}}\r\n              {:for \"db-host\", :class \"label-name\"})\r\n            [:span (if-not (get-in @props [:host :valid])\r\n                     {:class \"content-name\"\r\n                      :style {:color \"red\"}}\r\n                     {:class \"content-name\"})\r\n             \"Host\"]]\r\n           ]\r\n          [:div\r\n           {:class \"col-12 pb-5 input-field\"}\r\n           [:input\r\n            {:type         \"text\",\r\n             :name         \"text\",\r\n             :id           \"db-username\",\r\n             :autocomplete \"off\",\r\n             :required     true\r\n             :on-change    #(re-frame/dispatch-sync [::events/postgres-username-change (-> % .-target .-value)])\r\n             :value (get-in @props [:username :value])}]\r\n           [:label\r\n            (if-not (get-in @props [:username :valid])\r\n              {:for   \"db-username\", :class \"label-name incorrect-label\"\r\n               :style {:border-bottom-color \"red\"}}\r\n              {:for \"db-username\", :class \"label-name\"})\r\n            [:span (if-not (get-in @props [:username :valid])\r\n                     {:class \"content-name\"\r\n                      :style {:color \"red\"}}\r\n                     {:class \"content-name\"})\r\n             \"Username\"]]]\r\n          [:div\r\n           {:class \"col-12 pb-5 input-field\"}\r\n           [:input\r\n            {:type         \"text\",\r\n             :name         \"text\",\r\n             :id           \"db-password\",\r\n             :autocomplete \"off\",\r\n             :required     true\r\n             :on-change    #(re-frame/dispatch-sync [::events/postgres-password-change (-> % .-target .-value)])\r\n             :value (get-in @props [:password :value])}]\r\n           [:label\r\n            (if-not (get-in @props [:password :valid])\r\n              {:for   \"db-password\", :class \"label-name incorrect-label\"\r\n               :style {:border-bottom-color \"red\"}}\r\n              {:for \"db-password\", :class \"label-name\"})\r\n            [:span (if-not (get-in @props [:password :valid])\r\n                     {:class \"content-name\"\r\n                      :style {:color \"red\"}}\r\n                     {:class \"content-name\"})\r\n             \"Password\"]]]]]\r\n\r\n\r\n        [:div\r\n         {:class \"col-12 pt-5 header-with-help\"}\r\n         [:label {:class \"plus-label mt-20 help-label\"\r\n                  :style {:visibility \"hidden\"}} \"?\"]\r\n         [:p {:class \"mb-4 pb-2\"} \"Tables\"]\r\n         [:label {:class \"plus-label mt-20 help-label\" :for \"db-tables-help\"} \"?\"]\r\n         [:button {:class \"help-button\" :id \"db-tables-help\" :style {:display \"none\"}}]\r\n         [:div {:class \"help-div box\"}\r\n          [:p [:b \"Table name:\"] \" valid SQL-identifier for your future table\" [:br]\r\n           [:b \"Column:\"] \" valid SQL-identifier for your future table\" [:br]\r\n           [:b \"Type:\"] \" column data type, one of [bool number string date]\" [:br]]]]\r\n        [:div\r\n         {:class \"col-12 pt-5 center opts\",\r\n          :style {:display \"flex\"}}\r\n         [table-list]]\r\n        [plus-table-button]]\r\n\r\n       [:div\r\n        {:class \"col-12 pt-5 for-mongodb center\",\r\n         :style {:display (if (= @db-checked \"mongodb\") \"block\" \"none\")}}\r\n        \"Coming soon!\" [:br] \"Please, choose another database type.\"]\r\n       [:div\r\n        {:class \"col-12 pt-5 for-clickhouse center\",\r\n         :style {:display (if (= @db-checked \"clickhouse\") \"block\" \"none\")}}\r\n        \"Coming soon!\" [:br] \"Please, choose another database type.\"]\r\n       ])))"]}