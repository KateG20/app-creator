shadow$provide.module$node_modules$fs_extra$lib$move$move_sync=function(global,require,module,exports){const fs=require("module$node_modules$graceful_fs$graceful_fs"),path=require("module$node_modules$path_browserify$index"),copySync=require("module$node_modules$fs_extra$lib$copy$index").copySync,removeSync=require("module$node_modules$fs_extra$lib$remove$index").removeSync,mkdirpSync=require("module$node_modules$fs_extra$lib$mkdirs$index").mkdirpSync,stat=require("module$node_modules$fs_extra$lib$util$stat");
module.exports=function(src,dest,opts){opts=opts||{};const overwrite=opts.overwrite||opts.clobber||!1,{srcStat,isChangingCase=!1}=stat.checkPathsSync(src,dest,"move",opts);stat.checkParentPathsSync(src,srcStat,dest,"move");opts=path.dirname(dest);path.parse(opts).root===opts||mkdirpSync(path.dirname(dest));if(!isChangingCase)if(overwrite)removeSync(dest);else if(fs.existsSync(dest))throw Error("dest already exists.");b:{try{fs.renameSync(src,dest)}catch(err){if("EXDEV"!==err.code)throw err;copySync(src,
dest,{overwrite,errorOnExist:!0,preserveTimestamps:!0});src=removeSync(src);break b}src=void 0}return src}}
//# sourceMappingURL=module$node_modules$fs_extra$lib$move$move_sync.js.map
