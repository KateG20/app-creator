{
"version":3,
"file":"module$node_modules$fs_extra$lib$empty$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoBzGC,QAASA,aAAa,CAACC,GAAD,CAAM,CAC1B,IAAIC,KACJ,IAAI,CACFA,KAAA,CAAQC,EAAGC,CAAAA,WAAH,CAAeH,GAAf,CADN,CAEF,KAAM,CACN,MAAOI,MAAMC,CAAAA,UAAN,CAAiBL,GAAjB,CADD,CAIRC,KAAMK,CAAAA,OAAN,CAAcC,IAAA,EAAQ,CACpBA,IAAA,CAAOC,IAAKC,CAAAA,IAAL,CAAUT,GAAV,CAAeO,IAAf,CACPG,OAAOC,CAAAA,UAAP,CAAkBJ,IAAlB,CAFoB,CAAtB,CAR0B,CAjBtBK,MAAAA,CAAIhB,OAAA,CAAQ,wCAAR,CAAwBiB,CAAAA,WAClC,OAAMX,GAAKN,OAAA,CAAQ,2CAAR,CAAX,CACMY,KAAOZ,OAAA,CAAQ,2CAAR,CADb,CAEMQ,MAAQR,OAAA,CAAQ,+CAAR,CAFd;AAGMc,OAASd,OAAA,CAAQ,+CAAR,CAETkB,QAAAA,CAAWF,MAAA,CAAEE,cAAwB,CAACd,GAAD,CAAM,CAC/C,IAAIC,KACJ,IAAI,CACFA,KAAA,CAAQ,MAAMC,EAAGa,CAAAA,OAAH,CAAWf,GAAX,CADZ,CAEF,KAAM,CACN,MAAOI,MAAMY,CAAAA,MAAN,CAAahB,GAAb,CADD,CAIR,MAAOiB,QAAQC,CAAAA,GAAR,CAAYjB,KAAMkB,CAAAA,GAAN,CAAUZ,IAAA,EAAQG,MAAOA,CAAAA,MAAP,CAAcF,IAAKC,CAAAA,IAAL,CAAUT,GAAV,CAAeO,IAAf,CAAd,CAAlB,CAAZ,CARwC,CAAhC,CAyBjBV,OAAOC,CAAAA,OAAP,CAAiB,CACfC,YADe,CAEfqB,aAAcrB,YAFC,CAGfe,SAAAA,OAHe,CAIfO,SAAUP,OAJK,CAlCwF;",
"sources":["node_modules/fs-extra/lib/empty/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fs_extra$lib$empty$index\"] = function(global,require,module,exports) {\n'use strict'\n\nconst u = require('universalify').fromPromise\nconst fs = require('../fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst remove = require('../remove')\n\nconst emptyDir = u(async function emptyDir (dir) {\n  let items\n  try {\n    items = await fs.readdir(dir)\n  } catch {\n    return mkdir.mkdirs(dir)\n  }\n\n  return Promise.all(items.map(item => remove.remove(path.join(dir, item))))\n})\n\nfunction emptyDirSync (dir) {\n  let items\n  try {\n    items = fs.readdirSync(dir)\n  } catch {\n    return mkdir.mkdirsSync(dir)\n  }\n\n  items.forEach(item => {\n    item = path.join(dir, item)\n    remove.removeSync(item)\n  })\n}\n\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","emptyDirSync","dir","items","fs","readdirSync","mkdir","mkdirsSync","forEach","item","path","join","remove","removeSync","u","fromPromise","emptyDir","readdir","mkdirs","Promise","all","map","emptydirSync","emptydir"]
}
