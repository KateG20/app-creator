["^ ","~:resource-id",["~:shadow.build.classpath/resource","goog/fs/filewriter.js"],"~:js","goog.provide(\"goog.fs.FileWriter\");\ngoog.require(\"goog.fs.Error\");\ngoog.require(\"goog.fs.FileSaver\");\ngoog.fs.FileWriter = function(writer) {\n  goog.fs.FileWriter.base(this, \"constructor\", writer);\n  this.writer_ = writer;\n};\ngoog.inherits(goog.fs.FileWriter, goog.fs.FileSaver);\ngoog.fs.FileWriter.prototype.getPosition = function() {\n  return this.writer_.position;\n};\ngoog.fs.FileWriter.prototype.getLength = function() {\n  return this.writer_.length;\n};\ngoog.fs.FileWriter.prototype.write = function(blob) {\n  try {\n    this.writer_.write(blob);\n  } catch (e) {\n    throw new goog.fs.Error(e, \"writing file\");\n  }\n};\ngoog.fs.FileWriter.prototype.seek = function(offset) {\n  try {\n    this.writer_.seek(offset);\n  } catch (e) {\n    throw new goog.fs.Error(e, \"seeking in file\");\n  }\n};\ngoog.fs.FileWriter.prototype.truncate = function(size) {\n  try {\n    this.writer_.truncate(size);\n  } catch (e) {\n    throw new goog.fs.Error(e, \"truncating file\");\n  }\n};\n","~:source","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A wrapper for the HTML5 FileWriter object.\n *\n * When adding or modifying functionality in this namespace, be sure to update\n * the mock counterparts in goog.testing.fs.\n */\n\ngoog.provide('goog.fs.FileWriter');\n\ngoog.require('goog.fs.Error');\ngoog.require('goog.fs.FileSaver');\n\n\n\n/**\n * An object for monitoring the saving of files, as well as other fine-grained\n * writing operations.\n *\n * This should not be instantiated directly. Instead, it should be accessed via\n * {@link goog.fs.FileEntry#createWriter}.\n *\n * @param {!FileWriter} writer The underlying FileWriter object.\n * @constructor\n * @extends {goog.fs.FileSaver}\n * @final\n */\ngoog.fs.FileWriter = function(writer) {\n  'use strict';\n  goog.fs.FileWriter.base(this, 'constructor', writer);\n\n  /**\n   * The underlying FileWriter object.\n   *\n   * @type {!FileWriter}\n   * @private\n   */\n  this.writer_ = writer;\n};\ngoog.inherits(goog.fs.FileWriter, goog.fs.FileSaver);\n\n\n/**\n * @return {number} The byte offset at which the next write will occur.\n */\ngoog.fs.FileWriter.prototype.getPosition = function() {\n  'use strict';\n  return this.writer_.position;\n};\n\n\n/**\n * @return {number} The length of the file.\n */\ngoog.fs.FileWriter.prototype.getLength = function() {\n  'use strict';\n  return this.writer_.length;\n};\n\n\n/**\n * Write data to the file.\n *\n * @param {!Blob} blob The data to write.\n */\ngoog.fs.FileWriter.prototype.write = function(blob) {\n  'use strict';\n  try {\n    this.writer_.write(blob);\n  } catch (e) {\n    throw new goog.fs.Error(e, 'writing file');\n  }\n};\n\n\n/**\n * Set the file position at which the next write will occur.\n *\n * @param {number} offset An absolute byte offset into the file.\n */\ngoog.fs.FileWriter.prototype.seek = function(offset) {\n  'use strict';\n  try {\n    this.writer_.seek(offset);\n  } catch (e) {\n    throw new goog.fs.Error(e, 'seeking in file');\n  }\n};\n\n\n/**\n * Changes the length of the file to that specified.\n *\n * @param {number} size The new size of the file, in bytes.\n */\ngoog.fs.FileWriter.prototype.truncate = function(size) {\n  'use strict';\n  try {\n    this.writer_.truncate(size);\n  } catch (e) {\n    throw new goog.fs.Error(e, 'truncating file');\n  }\n};\n","~:compiled-at",1683761004121,"~:source-map-json","{\n\"version\":3,\n\"file\":\"goog.fs.filewriter.js\",\n\"lineCount\":36,\n\"mappings\":\"AAaAA,IAAKC,CAAAA,OAAL,CAAa,oBAAb,CAAA;AAEAD,IAAKE,CAAAA,OAAL,CAAa,eAAb,CAAA;AACAF,IAAKE,CAAAA,OAAL,CAAa,mBAAb,CAAA;AAgBAF,IAAKG,CAAAA,EAAGC,CAAAA,UAAR,GAAqBC,QAAQ,CAACC,MAAD,CAAS;AAEpCN,MAAKG,CAAAA,EAAGC,CAAAA,UAAWG,CAAAA,IAAnB,CAAwB,IAAxB,EAA8B,aAA9B,EAA6CD,MAA7C,CAAA;AAQA,MAAKE,CAAAA,OAAL,GAAeF,MAAf;AAVoC,CAAtC;AAYAN,IAAKS,CAAAA,QAAL,CAAcT,IAAKG,CAAAA,EAAGC,CAAAA,UAAtB,EAAkCJ,IAAKG,CAAAA,EAAGO,CAAAA,SAA1C,CAAA;AAMAV,IAAKG,CAAAA,EAAGC,CAAAA,UAAWO,CAAAA,SAAUC,CAAAA,WAA7B,GAA2CC,QAAQ,EAAG;AAEpD,SAAO,IAAKL,CAAAA,OAAQM,CAAAA,QAApB;AAFoD,CAAtD;AASAd,IAAKG,CAAAA,EAAGC,CAAAA,UAAWO,CAAAA,SAAUI,CAAAA,SAA7B,GAAyCC,QAAQ,EAAG;AAElD,SAAO,IAAKR,CAAAA,OAAQS,CAAAA,MAApB;AAFkD,CAApD;AAWAjB,IAAKG,CAAAA,EAAGC,CAAAA,UAAWO,CAAAA,SAAUO,CAAAA,KAA7B,GAAqCC,QAAQ,CAACC,IAAD,CAAO;AAElD,KAAI;AACF,QAAKZ,CAAAA,OAAQU,CAAAA,KAAb,CAAmBE,IAAnB,CAAA;AADE,GAEF,QAAOC,CAAP,CAAU;AACV,UAAM,IAAIrB,IAAKG,CAAAA,EAAGmB,CAAAA,KAAZ,CAAkBD,CAAlB,EAAqB,cAArB,CAAN;AADU;AAJsC,CAApD;AAeArB,IAAKG,CAAAA,EAAGC,CAAAA,UAAWO,CAAAA,SAAUY,CAAAA,IAA7B,GAAoCC,QAAQ,CAACC,MAAD,CAAS;AAEnD,KAAI;AACF,QAAKjB,CAAAA,OAAQe,CAAAA,IAAb,CAAkBE,MAAlB,CAAA;AADE,GAEF,QAAOJ,CAAP,CAAU;AACV,UAAM,IAAIrB,IAAKG,CAAAA,EAAGmB,CAAAA,KAAZ,CAAkBD,CAAlB,EAAqB,iBAArB,CAAN;AADU;AAJuC,CAArD;AAeArB,IAAKG,CAAAA,EAAGC,CAAAA,UAAWO,CAAAA,SAAUe,CAAAA,QAA7B,GAAwCC,QAAQ,CAACC,IAAD,CAAO;AAErD,KAAI;AACF,QAAKpB,CAAAA,OAAQkB,CAAAA,QAAb,CAAsBE,IAAtB,CAAA;AADE,GAEF,QAAOP,CAAP,CAAU;AACV,UAAM,IAAIrB,IAAKG,CAAAA,EAAGmB,CAAAA,KAAZ,CAAkBD,CAAlB,EAAqB,iBAArB,CAAN;AADU;AAJyC,CAAvD;;\",\n\"sources\":[\"goog/fs/filewriter.js\"],\n\"sourcesContent\":[\"/**\\n * @license\\n * Copyright The Closure Library Authors.\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\n/**\\n * @fileoverview A wrapper for the HTML5 FileWriter object.\\n *\\n * When adding or modifying functionality in this namespace, be sure to update\\n * the mock counterparts in goog.testing.fs.\\n */\\n\\ngoog.provide('goog.fs.FileWriter');\\n\\ngoog.require('goog.fs.Error');\\ngoog.require('goog.fs.FileSaver');\\n\\n\\n\\n/**\\n * An object for monitoring the saving of files, as well as other fine-grained\\n * writing operations.\\n *\\n * This should not be instantiated directly. Instead, it should be accessed via\\n * {@link goog.fs.FileEntry#createWriter}.\\n *\\n * @param {!FileWriter} writer The underlying FileWriter object.\\n * @constructor\\n * @extends {goog.fs.FileSaver}\\n * @final\\n */\\ngoog.fs.FileWriter = function(writer) {\\n  'use strict';\\n  goog.fs.FileWriter.base(this, 'constructor', writer);\\n\\n  /**\\n   * The underlying FileWriter object.\\n   *\\n   * @type {!FileWriter}\\n   * @private\\n   */\\n  this.writer_ = writer;\\n};\\ngoog.inherits(goog.fs.FileWriter, goog.fs.FileSaver);\\n\\n\\n/**\\n * @return {number} The byte offset at which the next write will occur.\\n */\\ngoog.fs.FileWriter.prototype.getPosition = function() {\\n  'use strict';\\n  return this.writer_.position;\\n};\\n\\n\\n/**\\n * @return {number} The length of the file.\\n */\\ngoog.fs.FileWriter.prototype.getLength = function() {\\n  'use strict';\\n  return this.writer_.length;\\n};\\n\\n\\n/**\\n * Write data to the file.\\n *\\n * @param {!Blob} blob The data to write.\\n */\\ngoog.fs.FileWriter.prototype.write = function(blob) {\\n  'use strict';\\n  try {\\n    this.writer_.write(blob);\\n  } catch (e) {\\n    throw new goog.fs.Error(e, 'writing file');\\n  }\\n};\\n\\n\\n/**\\n * Set the file position at which the next write will occur.\\n *\\n * @param {number} offset An absolute byte offset into the file.\\n */\\ngoog.fs.FileWriter.prototype.seek = function(offset) {\\n  'use strict';\\n  try {\\n    this.writer_.seek(offset);\\n  } catch (e) {\\n    throw new goog.fs.Error(e, 'seeking in file');\\n  }\\n};\\n\\n\\n/**\\n * Changes the length of the file to that specified.\\n *\\n * @param {number} size The new size of the file, in bytes.\\n */\\ngoog.fs.FileWriter.prototype.truncate = function(size) {\\n  'use strict';\\n  try {\\n    this.writer_.truncate(size);\\n  } catch (e) {\\n    throw new goog.fs.Error(e, 'truncating file');\\n  }\\n};\\n\"],\n\"names\":[\"goog\",\"provide\",\"require\",\"fs\",\"FileWriter\",\"goog.fs.FileWriter\",\"writer\",\"base\",\"writer_\",\"inherits\",\"FileSaver\",\"prototype\",\"getPosition\",\"goog.fs.FileWriter.prototype.getPosition\",\"position\",\"getLength\",\"goog.fs.FileWriter.prototype.getLength\",\"length\",\"write\",\"goog.fs.FileWriter.prototype.write\",\"blob\",\"e\",\"Error\",\"seek\",\"goog.fs.FileWriter.prototype.seek\",\"offset\",\"truncate\",\"goog.fs.FileWriter.prototype.truncate\",\"size\"]\n}\n"]