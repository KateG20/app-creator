["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/fs-extra/lib/ensure/link.js"],"~:js","shadow$provide.module$node_modules$fs_extra$lib$ensure$link=function(global,require,module,exports){global=require(\"module$node_modules$universalify$index\").fromCallback;const path=require(\"module$node_modules$path_browserify$index\"),fs=require(\"module$node_modules$graceful_fs$graceful_fs\"),mkdir=require(\"module$node_modules$fs_extra$lib$mkdirs$index\"),pathExists=require(\"module$node_modules$fs_extra$lib$path_exists$index\").pathExists,{areIdentical}=require(\"module$node_modules$fs_extra$lib$util$stat\");\nmodule.exports={createLink:global(function(srcpath,dstpath,callback){function makeLink(srcpath,dstpath){fs.link(srcpath,dstpath,err=>{if(err)return callback(err);callback(null)})}fs.lstat(dstpath,(_,dstStat)=>{fs.lstat(srcpath,(err$jscomp$1,srcStat)=>{if(err$jscomp$1)return err$jscomp$1.message=err$jscomp$1.message.replace(\"lstat\",\"ensureLink\"),callback(err$jscomp$1);if(dstStat&&areIdentical(srcStat,dstStat))return callback(null);const dir=path.dirname(dstpath);pathExists(dir,(err$jscomp$0,dirExists)=>\n{if(err$jscomp$0)return callback(err$jscomp$0);if(dirExists)return makeLink(srcpath,dstpath);mkdir.mkdirs(dir,err=>{if(err)return callback(err);makeLink(srcpath,dstpath)})})})})}),createLinkSync:function(srcpath,dstpath){try{var dstStat=fs.lstatSync(dstpath)}catch{}try{const srcStat=fs.lstatSync(srcpath);if(dstStat&&areIdentical(srcStat,dstStat))return}catch(err){throw err.message=err.message.replace(\"lstat\",\"ensureLink\"),err;}dstStat=path.dirname(dstpath);if(fs.existsSync(dstStat))return fs.linkSync(srcpath,\ndstpath);mkdir.mkdirsSync(dstStat);return fs.linkSync(srcpath,dstpath)}}}","~:source","shadow$provide[\"module$node_modules$fs_extra$lib$ensure$link\"] = function(global,require,module,exports) {\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\nconst { areIdentical } = require('../util/stat')\n\nfunction createLink (srcpath, dstpath, callback) {\n  function makeLink (srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err)\n      callback(null)\n    })\n  }\n\n  fs.lstat(dstpath, (_, dstStat) => {\n    fs.lstat(srcpath, (err, srcStat) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink')\n        return callback(err)\n      }\n      if (dstStat && areIdentical(srcStat, dstStat)) return callback(null)\n\n      const dir = path.dirname(dstpath)\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err)\n        if (dirExists) return makeLink(srcpath, dstpath)\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err)\n          makeLink(srcpath, dstpath)\n        })\n      })\n    })\n  })\n}\n\nfunction createLinkSync (srcpath, dstpath) {\n  let dstStat\n  try {\n    dstStat = fs.lstatSync(dstpath)\n  } catch {}\n\n  try {\n    const srcStat = fs.lstatSync(srcpath)\n    if (dstStat && areIdentical(srcStat, dstStat)) return\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  const dir = path.dirname(dstpath)\n  const dirExists = fs.existsSync(dir)\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\n  mkdir.mkdirsSync(dir)\n\n  return fs.linkSync(srcpath, dstpath)\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$fs_extra$lib$util$stat","~$module$node_modules$fs_extra$lib$path_exists$index","~$module$node_modules$universalify$index","~$shadow.js","~$module$node_modules$path_browserify$index","~$module$node_modules$graceful_fs$graceful_fs","~$module$node_modules$fs_extra$lib$mkdirs$index"]],"~:properties",["^5",["message","createLink","createLinkSync"]],"~:compiled-at",1683799130898,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$fs_extra$lib$ensure$link.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnGC,MAAAA,CAAIH,OAAA,CAAQ,wCAAR,CAAwBI,CAAAA,YAClC,OAAMC,KAAOL,OAAA,CAAQ,2CAAR,CAAb,CACMM,GAAKN,OAAA,CAAQ,6CAAR,CADX,CAEMO,MAAQP,OAAA,CAAQ,+CAAR,CAFd,CAGMQ,WAAaR,OAAA,CAAQ,oDAAR,CAA0BQ,CAAAA,UAH7C,CAIM,CAAEC,YAAF,CAAA,CAAmBT,OAAA,CAAQ,4CAAR,CAqDzBC;MAAOC,CAAAA,OAAP,CAAiB,CACfQ,WAAYP,MAAA,CApDdO,QAAoB,CAACC,OAAD,CAAUC,OAAV,CAAmBC,QAAnB,CAA6B,CAC/CC,QAASA,SAAS,CAACH,OAAD,CAAUC,OAAV,CAAmB,CACnCN,EAAGS,CAAAA,IAAH,CAAQJ,OAAR,CAAiBC,OAAjB,CAA0BI,GAAA,EAAO,CAC/B,GAAIA,GAAJ,CAAS,MAAOH,SAAA,CAASG,GAAT,CAChBH,SAAA,CAAS,IAAT,CAF+B,CAAjC,CADmC,CAOrCP,EAAGW,CAAAA,KAAH,CAASL,OAAT,CAAkB,CAACM,CAAD,CAAIC,OAAJ,CAAA,EAAgB,CAChCb,EAAGW,CAAAA,KAAH,CAASN,OAAT,CAAkB,CAACK,YAAD,CAAMI,OAAN,CAAA,EAAkB,CAClC,GAAIJ,YAAJ,CAEE,MADAA,aAAIK,CAAAA,OACG,CADOL,YAAIK,CAAAA,OAAQC,CAAAA,OAAZ,CAAoB,OAApB,CAA6B,YAA7B,CACP,CAAAT,QAAA,CAASG,YAAT,CAET,IAAIG,OAAJ,EAAeV,YAAA,CAAaW,OAAb,CAAsBD,OAAtB,CAAf,CAA+C,MAAON,SAAA,CAAS,IAAT,CAEtD,OAAMU,IAAMlB,IAAKmB,CAAAA,OAAL,CAAaZ,OAAb,CACZJ,WAAA,CAAWe,GAAX,CAAgB,CAACP,YAAD,CAAMS,SAAN,CAAA;AAAoB,CAClC,GAAIT,YAAJ,CAAS,MAAOH,SAAA,CAASG,YAAT,CAChB,IAAIS,SAAJ,CAAe,MAAOX,SAAA,CAASH,OAAT,CAAkBC,OAAlB,CACtBL,MAAMmB,CAAAA,MAAN,CAAaH,GAAb,CAAkBP,GAAA,EAAO,CACvB,GAAIA,GAAJ,CAAS,MAAOH,SAAA,CAASG,GAAT,CAChBF,SAAA,CAASH,OAAT,CAAkBC,OAAlB,CAFuB,CAAzB,CAHkC,CAApC,CARkC,CAApC,CADgC,CAAlC,CAR+C,CAoDnC,CADG,CAEfe,eAxBFA,QAAwB,CAAChB,OAAD,CAAUC,OAAV,CAAmB,CAEzC,GAAI,CACF,IAAAO,QAAUb,EAAGsB,CAAAA,SAAH,CAAahB,OAAb,CADR,CAEF,KAAM,EAER,GAAI,CACF,MAAMQ,QAAUd,EAAGsB,CAAAA,SAAH,CAAajB,OAAb,CAChB,IAAIQ,OAAJ,EAAeV,YAAA,CAAaW,OAAb,CAAsBD,OAAtB,CAAf,CAA+C,MAF7C,CAGF,MAAOH,GAAP,CAAY,CAEZ,KADAA,IAAIK,CAAAA,OACEL,CADQA,GAAIK,CAAAA,OAAQC,CAAAA,OAAZ,CAAoB,OAApB,CAA6B,YAA7B,CACRN,CAAAA,GAAN,CAFY,CAKRO,OAAAA,CAAMlB,IAAKmB,CAAAA,OAAL,CAAaZ,OAAb,CAEZ,IADkBN,EAAGuB,CAAAA,UAAHJ,CAAcF,OAAdE,CAClB,CAAe,MAAOnB,GAAGwB,CAAAA,QAAH,CAAYnB,OAAZ;AAAqBC,OAArB,CACtBL,MAAMwB,CAAAA,UAAN,CAAiBR,OAAjB,CAEA,OAAOjB,GAAGwB,CAAAA,QAAH,CAAYnB,OAAZ,CAAqBC,OAArB,CAnBkC,CAsB1B,CA7DwF;\",\n\"sources\":[\"node_modules/fs-extra/lib/ensure/link.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$fs_extra$lib$ensure$link\\\"] = function(global,require,module,exports) {\\n'use strict'\\n\\nconst u = require('universalify').fromCallback\\nconst path = require('path')\\nconst fs = require('graceful-fs')\\nconst mkdir = require('../mkdirs')\\nconst pathExists = require('../path-exists').pathExists\\nconst { areIdentical } = require('../util/stat')\\n\\nfunction createLink (srcpath, dstpath, callback) {\\n  function makeLink (srcpath, dstpath) {\\n    fs.link(srcpath, dstpath, err => {\\n      if (err) return callback(err)\\n      callback(null)\\n    })\\n  }\\n\\n  fs.lstat(dstpath, (_, dstStat) => {\\n    fs.lstat(srcpath, (err, srcStat) => {\\n      if (err) {\\n        err.message = err.message.replace('lstat', 'ensureLink')\\n        return callback(err)\\n      }\\n      if (dstStat && areIdentical(srcStat, dstStat)) return callback(null)\\n\\n      const dir = path.dirname(dstpath)\\n      pathExists(dir, (err, dirExists) => {\\n        if (err) return callback(err)\\n        if (dirExists) return makeLink(srcpath, dstpath)\\n        mkdir.mkdirs(dir, err => {\\n          if (err) return callback(err)\\n          makeLink(srcpath, dstpath)\\n        })\\n      })\\n    })\\n  })\\n}\\n\\nfunction createLinkSync (srcpath, dstpath) {\\n  let dstStat\\n  try {\\n    dstStat = fs.lstatSync(dstpath)\\n  } catch {}\\n\\n  try {\\n    const srcStat = fs.lstatSync(srcpath)\\n    if (dstStat && areIdentical(srcStat, dstStat)) return\\n  } catch (err) {\\n    err.message = err.message.replace('lstat', 'ensureLink')\\n    throw err\\n  }\\n\\n  const dir = path.dirname(dstpath)\\n  const dirExists = fs.existsSync(dir)\\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\\n  mkdir.mkdirsSync(dir)\\n\\n  return fs.linkSync(srcpath, dstpath)\\n}\\n\\nmodule.exports = {\\n  createLink: u(createLink),\\n  createLinkSync\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"u\",\"fromCallback\",\"path\",\"fs\",\"mkdir\",\"pathExists\",\"areIdentical\",\"createLink\",\"srcpath\",\"dstpath\",\"callback\",\"makeLink\",\"link\",\"err\",\"lstat\",\"_\",\"dstStat\",\"srcStat\",\"message\",\"replace\",\"dir\",\"dirname\",\"dirExists\",\"mkdirs\",\"createLinkSync\",\"lstatSync\",\"existsSync\",\"linkSync\",\"mkdirsSync\"]\n}\n"]